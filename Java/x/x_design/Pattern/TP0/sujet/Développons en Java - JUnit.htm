<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 TRANSITIONAL//EN">
<html><head>
<title>Développons en Java - JUnit</title>
<meta http-equiv="Content-type" content="text/html; charset=windows-1252">
<meta name="description" content="">
<meta name="keywords" content="java tutoriel tutorial cours didacticiel dej junit">
<meta name="robots" content="all">
<meta name="revisit-after" content="2 months">
<meta http-equiv="Content-Language" content="fr-FX">
<meta name="author" content="Jean Michel DOUDOUX">
<meta http-equiv="Reply-to" content="jean-michel.doudoux@wanadoo.fr">
<link rev="made" href="mailto:jean-michel.doudoux@wanadoo.fr"><link href="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/dej_style.css" rel="stylesheet" type="text/css">

<link type="text/css" rel="stylesheet" href="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/shCore.css">
<link type="text/css" rel="stylesheet" href="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/shThemeDefault.css">
<script language="javascript" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/shCore.js"></script>
<script language="javascript" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/shBrushJava.js"></script>
<script language="javascript" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/shBrushPlain.js"></script>
<script language="javascript" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/shBrushXml.js"></script>
<script type="text/javascript" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/plusone.js">
  {lang: 'fr'}
</script>

</head>
<body>
<!--ENTETE-->
<table bgcolor="#7B7BC2" border="0" cellpadding="2" cellspacing="0" width="100%">
<tbody>
<tr>
<td rowspan="2" align="center" width="50">&nbsp;</td><td rowspan="2" align="center" width="50">
<a href="http://www.jmdoudoux.fr/java/dej/chap-frameworks-test.htm" alt="100. Les frameworks de tests">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/FlecheG.gif" alt="100. Les frameworks de tests" align="left" border="0" height="31" hspace="0" width="31">
</a>
</td>
<td rowspan="2" align="center" width="50">
<a href="http://www.jmdoudoux.fr/java/dej/chap-objets-mock.htm" alt="102. Les objets de type Mock">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/FlecheD.gif" alt="102. Les objets de type Mock" align="left" border="0" height="31" hspace="0" width="31">
</a>
</td>
<td rowspan="2" align="center">
<a href="javascript:window.print()">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/imprimer.gif" alt="Imprimer" align="middle" border="0" height="40" width="46">
</a>
</td>
<td rowspan="2" align="center">
<a href="http://www.jmdoudoux.fr/java/dej/index.htm">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/index.gif" alt="Sommaire" align="middle" border="0" height="31" hspace="0" width="34">
</a>
</td>
<td rowspan="2" align="center">
<a href="http://www.jmdoudoux.fr/java/dej/indexavecframes.htm" target="_top">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/frame.png" alt="Consulter avec table des matières" align="middle" border="0" height="40" hspace="0" width="46">
</a>
</td>
<td rowspan="2" style="vertical-align:middle" align="left" valign="middle">
<form method="get" action="http://www.google.com/search" target="_blank">
<div style="border:0px dotted black;padding:4px;width:380px;">
<input name="q" size="35" style="color:#808080;" maxlength="255" value="Recherche dans DEJ avec Google" onfocus="if(this.value==this.defaultValue) this.value=''; this.style.color='black';" onblur="if(this.value=='') this.value=this.defaultValue;this.style.color='#808080'; " type="text">
<input value="Rechercher" type="submit">
<input name="sitesearch" value="http://www.jmdoudoux.fr/java/dej" type="hidden">
</div>
</form>
</td>
<td rowspan="2" style="vertical-align:middle" align="left" valign="middle">
<g:plusone style="display: block;"><iframe style="width: 30px; height: 19px; border: 0px none;" id="guhpodupaktzpmzcaysjayoyktnzbesh"></iframe></g:plusone>
</td>
<td align="right">
<font color="#FFFFFF" size="5"><b><i>Développons en Java&nbsp;&nbsp;</i></b></font><font color="#FFFFFF" size="-1"> v 2.00&nbsp;&nbsp;</font></td>
</tr>
<tr>
<td align="right"><font color="#FFFFFF" size="-1">Copyright (C) 1999-2014 <a class="auteur" href="http://www.jmdoudoux.fr/presentation.htm" rel="author">Jean-Michel DOUDOUX</a>.&nbsp;&nbsp;</font></td>
</tr>
</tbody>
</table>
<hr>

<p>&nbsp;</p>
<h1 class="TITRESECTION0"><!--idrefpage value="junit" --><!--resumetitre value="pr&eacute;sente en d&eacute;tail le framework de tests unitaires le plus utilis&eacute;" --><!--nchpdeb--><a name="junit">101. <!--nchpfin-->JUnit</a></h1>
<p>&nbsp;</p>
<!--chapitredeb-->
<div align="right">
  <table summary="titre" border="0" cellspacing="0">
    <tbody><tr>
      <td width="270"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/chapitre.gif" alt="chapitre" border="0" height="100" width="347"></td>
<td valign="top" width="50"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/1.gif" alt="1" border="0" height="83" width="62"></td>
<td valign="top" width="50"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/0.gif" alt="0" border="0" height="83" width="62"></td>
<td valign="top" width="50"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/1.gif" alt="1" border="0" height="83" width="62"></td>
    </tr>
  </tbody></table>
  <br>
</div>
<!--chapitrefin-->
<div align="justify">
  <!--resumedeb niveau="4" datecrea="" datemodif="" version=""-->
  <p>&nbsp;</p>
  <div align="right">
    <table border="0" cellpadding="0" cellspacing="0">
      <tbody><tr><td width="200">Niveau :</td><td width="200">&nbsp;<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/niveau4.png" alt="niveau 4" height="12" width="80">&nbsp;Supérieur&nbsp;</td></tr>
    </tbody></table>
  </div>
<!--resumefin-->
<p>&nbsp;</p>

<table class="tableau" border="0" cellpadding="0" cellspacing="0" width="100%">
  <tbody><tr>
    <td width="100"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/junit.gif" alt=" " height="38" width="91"></td>
    <td>JUnit est un framework open source pour le développement et 
l'exécution de tests unitaires automatisables. Le principal intérêt est 
de s'assurer que le code répond toujours aux besoins même après 
d'éventuelles modifications. Plus généralement, ce type de tests est 
appelé tests unitaires de non régression.</td>
  </tr>
</tbody></table><br>
<p>JUnit a été initialement développé par Erich Gamma et Kent Beck.</p>
<p>JUnit propose :</p>
<ul type="disc">
 <li>Un framework pour le développement des tests
     unitaires reposant sur des assertions qui testent les résultats attendus</li>
 <li>Des applications pour permettre l'exécution des
     tests et afficher les résultats</li>
</ul>
<p>Le but est d'automatiser les tests. Ceux-ci sont exprimés dans des classes sous la forme de cas de tests
avec leurs résultats attendus. JUnit exécute ces tests et les comparent avec ces résultats.</p>
<p>Cela permet de séparer le code de
la classe, du code qui permet de la tester. Souvent pour tester une classe, il
est facile de créer une méthode main() qui va contenir les traitements de
tests. L'inconvénient est que ce code "superflu"  est inclus dans la classe. De plus, son exécution doit se faire manuellement.</p>
<p>La rédaction de cas de tests peut
avoir un effet immédiat pour détecter des bugs mais surtout elle a un effet à
long terme qui facilite la détection d'effets de bords lors de modifications.</p>
<p>Les cas de tests sont regroupés
dans des classes Java qui contiennent une ou plusieurs méthodes de tests. Les cas
de tests peuvent être exécutés individuellement ou sous la forme de suites de
tests.</p>
<p>JUnit permet le développement incrémental d'une suite de tests.</p>
<p>Avec JUnit, l'unité de test est
une classe dédiée qui regroupe des cas de tests. Ces cas de tests exécutent les
tâches suivantes :</p>
<ul>
  <li>création
    d'une instance de la classe et de tout autre objet nécessaire aux tests</li>
  <li>appel
    de la méthode à tester avec les paramètres du cas de test</li>
  <li>comparaison
    du résultat attendu avec le résultat obtenu : en cas d'échec, une exception est
    levée</li>
</ul>
<p>JUnit est particulièrement adapté
pour être utilisé avec la méthode eXtreme Programming puisque cette méthode
préconise, entre autre, l'automatisation des tâches de tests unitaires qui ont
été définies avant l'écriture du code.</p>
<p>La version utilisée dans ce
chapitre est la 3.8.1 sauf dans la section dédiée à la version 4 de JUnit.</p>
<p>La page officielle est à
l'url&nbsp;: <a href="http://junit.org/">http://junit.org</a>.</p>
<p>La dernière version de JUnit peut
être téléchargée sur le site <a href="http://www.junit.org/">www.junit.org</a>.
Pour l'installer, il suffit de décompresser l'archive dans un répertoire du
système.</p>
<p>Pour pouvoir utiliser JUnit, il faut ajouter le fichier junit.jar au classpath.</p>
<p>Ce chapitre contient plusieurs sections :</p>
  <!--listesectiondeb-->
  <ul type="square">
    <li><a href="#junit-1">Un exemple très simple</a></li>
    <li><a href="#junit-2">L'écriture des cas de tests</a></li>
    <li><a href="#junit-3">L'exécution des tests</a></li>
    <li><a href="#junit-4">Les suites de tests</a></li>
    <li><a href="#junit-5">L'automatisation des tests avec Ant</a></li>
    <li><a href="#junit-6">JUnit 4</a></li>
  </ul>
<!--listesectionfin-->
<p>&nbsp;</p>
<h2 class="TITRESECTION1"><!--nchpdeb--><a name="junit-1">101.1. <!--nchpfin-->Un exemple très simple</a></h2>
<p>L'exemple utilisé dans cette section est la classe suivante :</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_557374"><div class="bar   "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_557374_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_557374" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasse{</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">int</code> <code class="plain">calculer(</code><code class="keyword">int</code> <code class="plain">a, </code><code class="keyword">int</code> <code class="plain">b) {</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">int</code> <code class="plain">res = a + b;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">if</code> <code class="plain">(a == </code><code class="value">0</code><code class="plain">){</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">res = b * </code><code class="value">2</code><code class="plain">;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">} </code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">if</code> <code class="plain">(b == </code><code class="value">0</code><code class="plain">) {</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">res = a * a;&nbsp;&nbsp;&nbsp;&nbsp; </code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">res; </code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Il faut suivre plusieurs étapes :</p>
<p>1) compiler cette classe : javac MaClasse.java</p>
<p>2) écrire une classe qui va
contenir les différents tests à réaliser par JUnit. L'exemple est
volontairement simpliste en ne définissant qu'un seul cas de test.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_184192"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_184192_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_184192" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasseTest </code><code class="keyword">extends</code> <code class="plain">TestCase{</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testCalculer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="value">2</code><code class="plain">,MaClasse.calculer(</code><code class="value">1</code><code class="plain">,</code><code class="value">1</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>3) compiler cette classe avec le fichier junit.jar qui doit être dans le classpath.</p>
<p>4) enfin, appeler JUnit pour qu'il exécute la séquence de tests.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_318056"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_318056_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_318056" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">java -cp junit.jar;. junit.textui.TestRunner MaClasseTest</code></span></span></div><div class="line alt2"><code class="number">2.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">C:\java\testjunit&gt;java -cp junit.jar;. junit.textui.TestRunner</code></span></span></div><div class="line alt1"><code class="number">3.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">MaClasseTest</code></span></span></div><div class="line alt2"><code class="number">4.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">.</code></span></span></div><div class="line alt1"><code class="number">5.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">Time: 0,01</code></span></span></div><div class="line alt2"><code class="number">6.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">OK (1 test)</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Attention : le respect de la casse dans le
nommage des méthodes de tests est très important. Les méthodes de tests doivent
obligatoirement commencer par test en minuscule car JUnit utilise
l'introspection pour déterminer les méthodes à exécuter.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_280670"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_280670_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_280670" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasseTest </code><code class="keyword">extends</code> <code class="plain">TestCase{</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">TestCalculer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="value">2</code><code class="plain">,MaClasse.calculer(</code><code class="value">1</code><code class="plain">,</code><code class="value">1</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>L'utilisation de cette classe avec JUnit produit le résultat suivant :</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_454253"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_454253_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_454253" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">C:\java\testjunit&gt;java -cp junit.jar;. junit.textui.TestRunner</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">MaClasseTest</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">.F</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Time: 0,01</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">There was 1 failure:</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">1) warning(junit.framework.TestSuite$1)junit.framework.AssertionFailedError: No</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">tests found in MaClasseTest</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">FAILURES!!!</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Tests run: 1,&nbsp; Failures: 1,&nbsp; Errors: 0</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h2 class="TITRESECTION1"><!--nchpdeb--><a name="junit-2">101.2. <!--nchpfin-->L'écriture des cas de tests</a></h2>
<p>JUnit propose un framework pour écrire les classes de tests.</p>
<p>Un test est une classe qui hérite de la classe TestCase. Par convention le nom de la classe de
test est composé du nom de la classe suivi de Test.</p>
<p>Chaque cas de tests
fait l'objet d'une méthode dans la classe de tests. Le nom de ces méthodes doit
obligatoirement commencer par le préfixe test.</p>
<p>Chacune de ces méthodes contient généralement des traitements en trois étapes&nbsp;:</p>
<ul type="disc">
 <li>Instanciation des objets requis</li>
 <li>Invocation des traitements sur les objets</li>
 <li>Vérification des résultats des traitements</li>
</ul>
<p>Il est important de se souvenir lors de
l'écriture de cas de tests que ceux-ci doivent être indépendants les uns des
autres. JUnit ne garantit pas l'ordre d'exécution des cas de tests puisque
ceux-ci sont obtenus par introspection.</p>
<p>Toutes les classes de tests avec JUnit héritent de la classe Assert.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-2-1">101.2.1. <!--nchpfin-->La définition de la classe de tests</a></h3>
<p>Pour écrire les cas de tests, il faut
écrire une classe qui étende la classe junit.framework.TestCase. Le nom de
cette classe est le nom de la classe à tester suivi par "Test".</p>
<p>Remarque : dans
la version 3.7 de JUnit, une classe de tests doit obligatoirement posséder un
constructeur qui attend un objet de type String en paramètre.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_533387"><div class="bar             "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_533387_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_533387" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasseTest </code><code class="keyword">extends</code> <code class="plain">TestCase{</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">MaClasseTest(String testMethodName) {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(testMethodName);</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testCalculer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">fail(</code><code class="string">"Cas de test a ecrire"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Dans cette classe, il faut écrire une
méthode dont le nom commence par "test" en minuscule suivi du nom du
cas de test (généralement le nom de la méthode à tester). Chacune de ces
méthodes doit avoir les caractéristiques suivantes :</p>
<ul type="disc">
 <li>elle doit être déclarée public</li>
 <li>elle ne doit renvoyer aucune valeur</li>
 <li>elle ne doit pas posséder de paramètres.</li>
</ul>
<p>Par introspection, JUnit va automatiquement rechercher toutes les 
méthodes qui respectent cette convention. Le respect de ces règles est 
donc important pour une bonne exécution des tests par JUnit.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-2-2">101.2.2. <!--nchpfin-->La définition des cas de tests</a></h3>
<p>Chaque classe de tests doit avoir
obligatoirement au moins une méthode de test sinon une erreur est remontée par
JUnit.</p>
<p>JUnit recherche, par introspection, les méthodes qui débutent
par test, n'ont aucun paramètre et ne retourne aucune valeur. Ces méthodes
peuvent lever des exceptions qui sont automatiquement capturées par JUnit qui
remonte alors une erreur et donc un échec du cas de tests.</p>
<p>Dès qu'un test échoue, l'exécution de la
méthode correspondante est interrompue et JUnit passe à la méthode suivante.</p>
<p>La classe suivante sera utilisée dans les
exemples de cette section :</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_623386"><div class="bar   "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_623386_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_623386" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasse2{</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="keyword">int</code> <code class="plain">a;</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="keyword">int</code> <code class="plain">b;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><code class="spaces">&nbsp;</code><span class="block" style="margin-left: 7px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">MaClasse2(</code><code class="keyword">int</code> <code class="plain">a, </code><code class="keyword">int</code> <code class="plain">b) {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.a = a;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.b = b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">int</code> <code class="plain">getA() {</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">a;&nbsp; </code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">int</code> <code class="plain">getB() {</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">b;&nbsp; </code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setA(</code><code class="keyword">int</code> <code class="plain">unA) {</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.a = unA;</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setB(</code><code class="keyword">int</code> <code class="plain">unB) {</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.b = unB;</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">int</code> <code class="plain">calculer() {</code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">int</code> <code class="plain">res = a + b;</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">if</code> <code class="plain">(a == </code><code class="value">0</code><code class="plain">){</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">res = b * </code><code class="value">2</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">} </code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">if</code> <code class="plain">(b == </code><code class="value">0</code><code class="plain">) {</code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">res = a * a;&nbsp;&nbsp;&nbsp;&nbsp; </code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">res; </code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">38.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">39.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">int</code> <code class="plain">sommer() </code><code class="keyword">throws</code> <code class="plain">IllegalStateException {</code></span></span></div><div class="line alt2"><code class="number">40.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">if</code> <code class="plain">((a == </code><code class="value">0</code><code class="plain">) &amp;&amp; (b==</code><code class="value">0</code><code class="plain">)) {</code></span></span></div><div class="line alt1"><code class="number">41.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="keyword">throw</code> <code class="keyword">new</code> <code class="plain">IllegalStateException(</code><code class="string">"Les deux valeurs sont nulles"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">42.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">43.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">a+b; </code></span></span></div><div class="line alt2"><code class="number">44.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">45.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Avec JUnit, la plus petite unité de tests
est l'assertion dont le résultat de l'expression booléenne indique un succès ou
une erreur.</p>
<p>Les cas de tests utilisent des affirmations
(assertion en anglais) sous la forme de méthodes nommées assertXXX() proposées
par le framework. Il existe de nombreuses méthodes de ce type qui sont héritées
de la classe junit.framework.Assert :</p>
<table class="tableau" align="center" border="1" cellpadding="4" cellspacing="0" width="100%">
 <tbody><tr>
  <td>
  <p>Méthode</p>
  </td>
  <td>
  <p>Rôle</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>assertEquals()</p>
  </td>
  <td>
  <p>Vérifier l'égalité de deux
  valeurs de type primitif ou objet (en utilisant la méthode equals()). Il
  existe de nombreuses surcharges de cette méthode pour chaque type
  primitif, pour un objet de type Object et pour un objet de type String</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>assertFalse()</p>
  </td>
  <td>
  <p>Vérifier que la valeur fournie
  en paramètre est fausse</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>assertNull()</p>
  </td>
  <td>
  <p>Vérifier que l'objet fourni en
  paramètre soit null</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>assertNotNull()</p>
  </td>
  <td>
  <p>Vérifier que l'objet fourni en
  paramètre ne soit pas null</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>assertSame()</p>
  </td>
  <td>
  <p>Vérifier que les deux objets
  fournis en paramètre font référence à la même entité</p>
  <p>Exemples identiques :</p>
  <p>assertSame("Les deux objets sont identiques", obj1, obj2);</p>
  <p>assertTrue("Les deux objets sont identiques ", obj1 == obj2);</p></td>
 </tr>
 <tr>
  <td>
  <p>assertNotSame()</p>
  </td>
  <td>
  <p>Vérifier
  que les deux objets fournis en paramètre ne font pas référence à la même
  entité</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>assertTrue()</p>
  </td>
  <td>
  <p>Vérifier
  que la valeur fournie en paramètre est vraie</p>
  </td>
 </tr>
</tbody></table><br>
<p>Bien qu'il soit possible de n'utiliser
que la méthode assertTrue(), les autres méthodes assertXXX() facilitent
l'expression des conditions de tests.</p>
<p>Chacune de ces méthodes possède une version
surchargée qui accepte un paramètre supplémentaire sous la forme d'une chaîne
de caractères indiquant un message qui sera affiché en cas d'échec du cas de
test. Le message devrait décrire le cas de tests évalué à true.</p>
<p>L'utilisation de cette version surchargée
est recommandée car elle facilite l'exploitation des résultats des cas de
tests.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_642637"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_642637_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_642637" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasse2Test </code><code class="keyword">extends</code> <code class="plain">TestCase{</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testCalculer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">MaClasse2 mc = </code><code class="keyword">new</code> <code class="plain">MaClasse2(</code><code class="value">1</code><code class="plain">,</code><code class="value">1</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="value">2</code><code class="plain">,mc.calculer());</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>L'ordre des paramètres contenant la valeur
attendue et la valeur obtenue est important pour obtenir un message d'erreur
fiable en cas d'échec du cas de test. Quelque soit la surcharge utilisée
l'ordre des deux valeurs à tester est toujours le même : c'est toujours la
valeur attendue qui précède la valeur courante.</p>
<p>La méthode fail() permet de forcer le cas
de test à échouer. Une version surchargée permet de préciser un message qui
sera affiché.</p>
<p>Il est aussi souvent utile lors de la
définition des cas de tests de  tester si une exception est levée lors de
l'exécution des traitements.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_312266"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_312266_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_312266" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasse2Test </code><code class="keyword">extends</code> <code class="plain">TestCase{</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSommer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">MaClasse2 mc = </code><code class="keyword">new</code> <code class="plain">MaClasse2(</code><code class="value">0</code><code class="plain">,</code><code class="value">0</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">mc.sommer();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}&nbsp; </code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_306084"><div class="bar             "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_306084_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_306084" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">C:\&gt;java -cp junit.jar;. junit.textui.TestRunner MaClasse2Test</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">.E</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Time: 0,01</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">There was 1 error:</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">1) testSommer(MaClasse2Test)java.lang.IllegalStateException: Les deux valeurs so</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">nt nulles</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at MaClasse2.sommer(MaClasse2.java:42)</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at MaClasse2Test.testSommer(MaClasse2Test.java:31)</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">java:39)</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">sorImpl.java:25)</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">FAILURES!!!</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Tests run: 2,&nbsp; Failures: 0,&nbsp; Errors: 1</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Avec JUnit, pour réaliser de tels cas de
tests, il suffit d'appeler la méthode avec les conditions qui doivent lever une
exception, d'encapsuler cet appel dans un bloc try/catch et d'appeler la méthode
fail() si l'exception désirée n'est pas levée.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_988767"><div class="bar             "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_988767_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_988767" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasse2Test </code><code class="keyword">extends</code> <code class="plain">TestCase{</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSommer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">MaClasse2 mc = </code><code class="keyword">new</code> <code class="plain">MaClasse2(</code><code class="value">1</code><code class="plain">,</code><code class="value">1</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="comments">// cas de test 1</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="value">2</code><code class="plain">,mc.sommer());</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="comments">// cas de test 2</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">try</code> <code class="plain">{</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">mc.setA(</code><code class="value">0</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">mc.setB(</code><code class="value">0</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">mc.sommer();&nbsp;&nbsp;&nbsp; </code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">fail(</code><code class="string">"Une exception de type IllegalStateException aurait du etre levee"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">} </code><code class="keyword">catch</code> <code class="plain">(IllegalStateException ise) {</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-2-3">101.2.3. <!--nchpfin-->L'initialisation des cas de tests</a></h3>
<p>Il est fréquent que les cas de tests
utilisent une instance d'un même objet ou nécessitent l'usage de ressources
particulières telle qu'une instance d'une classe pour l'accès à une base de
données par exemple.</p>
<p>Pour réaliser ces opérations de création et
de destruction d'objets, la classe TestCase propose les méthodes setUp() et
tearDown() qui sont respectivement appelées avant et après l'appel de chaque
méthode contenant un cas de test.</p>
<p>Il suffit simplement de redéfinir ces deux méthodes en fonction de ses besoins.</p>
<p>Cette section va tester le bean ci-dessous</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_376212"><div class="bar                                                                                   "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_376212_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_376212" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Personne {</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">String nom;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">String prenom;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">Personne() {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">();</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">Personne(String nom, String prenom) {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">();</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.nom = nom;</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.prenom = prenom;</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">String getNom() {</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">nom;</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setNom(String nom) {</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.nom = nom;</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">String getPrenom() {</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">prenom;</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setPrenom(String prenom) {</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.prenom = prenom;</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Le plus simple est de définir un membre
privé du type dont on a besoin et de créer une instance de ce type dans la
méthode setUp().</p>
<p>Il est important de se souvenir que la
méthode setUp() est invoquée systématiquement avant l'appel de chaque méthode
de tests. Sa mise en oeuvre n'est donc requise que si toutes les méthodes de
tests ont besoin de créer une instance d'un même type ou d'exécuter un même
traitement.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_406738"><div class="bar                                                                                                             "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_406738_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_406738" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestCase;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">PersonneTest(String name) {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(name);</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">setUp() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.setUp();</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">new</code> <code class="plain">Personne(</code><code class="string">"nom1"</code><code class="plain">,</code><code class="string">"prenom1"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">tearDown() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.tearDown();</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">null</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testPersonne() {</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertNotNull(</code><code class="string">"L'instance est créée"</code><code class="plain">, personne);</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testGetNom() {</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom1"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSetNom() {</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setNom(</code><code class="string">"nom2"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom2"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testGetPrenom() {</code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom1"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt2"><code class="number">38.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">39.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">40.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSetPrenom() {</code></span></span></div><div class="line alt1"><code class="number">41.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setPrenom(</code><code class="string">"prenom2"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">42.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom2"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt1"><code class="number">43.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">44.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Ceci évite de créer l'instance dans chaque
méthode de tests et simplifie donc l'écriture des cas de tests.</p>
<p>Dans l'exemple&nbsp;la méthode tearDown()
remet à null l'instance créée : ceci n'est pas une obligation d'autant que le
temps des traitements réalisés durant les tests est normalement négligeable. La
méthode tearDown() peut cependant avoir un grand intérêt pour, par exemple,
libérer des ressources comme une connexion à une base de données initiée dans
la méthode setUp().</p>
<p>Pour des besoins particuliers, il peut être
nécessaire d'exécuter du code une seule fois avant l'exécution des cas de tests
et/ou d'exécuter du code une fois tous les cas des tests exécutés.</p>
<p>JUnit propose pour cela la classe junit.Extensions.TestSetup qui propose la mise en oeuvre du design pattern décorateur.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_712048"><div class="bar                                  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_712048_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_712048" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.extensions.TestSetup;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.Test;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestCase;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestSuite;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">PersonneTest(String name) {</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(name);</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">setUp() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.setUp();</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">new</code> <code class="plain">Personne(</code><code class="string">"nom1"</code><code class="plain">, </code><code class="string">"prenom1"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">tearDown() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.tearDown();</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">null</code><code class="plain">;</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Test suite() {</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">TestSetup setup = </code><code class="keyword">new</code> <code class="plain">TestSetup(</code><code class="keyword">new</code> <code class="plain">TestSuite(PersonneTest.</code><code class="keyword">class</code><code class="plain">)) {</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">setUp() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="comments">// code execute une seule fois avant l'exécution des cas de tests</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">System.out</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 84px !important;"><code class="plain">.println(</code><code class="string">"Appel de la methode setUp() de la classe de tests"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">tearDown() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="comments">// code execute une seule fois après l'exécution de tous les cas de tests</code></span></span></div><div class="line alt2"><code class="number">38.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">System.out</code></span></span></div><div class="line alt1"><code class="number">39.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 84px !important;"><code class="plain">.println(</code><code class="string">"Appel de la methode tearDown() de la classe de tests"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">40.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">41.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">};</code></span></span></div><div class="line alt2"><code class="number">42.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">setup;</code></span></span></div><div class="line alt1"><code class="number">43.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">44.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">45.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></span></span></div><div class="line alt2"><code class="number">46.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">junit.textui.TestRunner.run(suite());</code></span></span></div><div class="line alt1"><code class="number">47.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">48.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Dans l'exemple ci-dessus, les méthodes setUp() et tearDown() de la classe PersonneTest seront
toujours invoquées respectivement avant et après chaque exécution d'un cas de tests.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-2-4">101.2.4. <!--nchpfin-->Le test de la levée d'exceptions</a></h3>
<p>Il est fréquent qu'une méthode puisse lever une ou plusieurs exceptions durant son exécution.
Il faut prévoir des cas de tests pour vérifier que dans les conditions
adéquates une exception attendue est bien levée.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_137086"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_137086_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_137086" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Personne {</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">String nom;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">String prenom;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">Personne() {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">();</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">Personne(String nom, String prenom) {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">();</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.nom = nom;</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.prenom = prenom;</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">String getNom() {</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">nom;</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setNom(String nom) {</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">if</code> <code class="plain">(nom == </code><code class="keyword">null</code><code class="plain">) {</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="keyword">throw</code> <code class="keyword">new</code> <code class="plain">IllegalArgumentException(</code><code class="string">"la propriété nom ne peut pas être null"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.nom = nom;</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">String getPrenom() {</code></span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">prenom;</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setPrenom(String prenom) {</code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">this</code><code class="plain">.prenom = prenom;</code></span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Pour effectuer la vérification de la levée d'une exception, il faut inclure l'invocation de la
méthode dans un bloc try/catch et faire appel à la méthode fail() si l'exception n'est pas levée.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_511792"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_511792_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_511792" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestCase;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">PersonneTest(String name) {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(name);</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">setUp() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.setUp();</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">new</code> <code class="plain">Personne(</code><code class="string">"nom1"</code><code class="plain">,</code><code class="string">"prenom1"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">tearDown() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.tearDown();</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">null</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testPersonne() {</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertNotNull(</code><code class="string">"L'instance est créée"</code><code class="plain">, personne);</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testGetNom() {</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom1"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSetNom() {</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setNom(</code><code class="string">"nom2"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom2"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">try</code> <code class="plain">{</code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">personne.setNom(</code><code class="keyword">null</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">fail(</code><code class="string">"IllegalArgumentException non levée avec la propriété nom à null"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">} </code><code class="keyword">catch</code> <code class="plain">(IllegalArgumentException iae) {</code></span></span></div><div class="line alt2"><code class="number">38.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="comments">// ignorer l'exception puisque le test est OK (l'exception est levée)</code></span></span></div><div class="line alt1"><code class="number">39.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">40.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">41.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">42.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testGetPrenom() {</code></span></span></div><div class="line alt1"><code class="number">43.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom1"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt2"><code class="number">44.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">45.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">46.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSetPrenom() {</code></span></span></div><div class="line alt1"><code class="number">47.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setPrenom(</code><code class="string">"prenom2"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">48.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom2"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt1"><code class="number">49.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">50.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Attention : une erreur courante lorsque l'on code ses premiers tests unitaires est d'inclure
les invocations de méthodes dans des blocs try/catch. Leur utilisation doit
être uniquement réservée comme dans l'exemple précédant. Dans tous les autres
cas, il faut laisser l'exception se propager : dans ce cas, JUnit va
automatiquement reporter un échec du test. Il est en particulier inutile
d'utiliser un bloc try/catch et de faire appel à la méthode fail() dans le
catch puisque JUnit le fait déjà.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-2-5">101.2.5. <!--nchpfin-->L'héritage d'une classe de base</a></h3>
<p>Il est possible de définir une classe de base qui servira de classe mère à d'autres classes 
de tests notamment en leur fournissant des fonctionnalités communes.</p>
<p>JUnit n'impose pas qu'une classe de tests
dérive directement de la classe TestCase. Ceci est particulièrement pratique
lorsque l'on souhaite que certaines initialisations ou certains traitements
soit systématiquement exécutés (exemple chargement d'un fichier de
configuration, ...).</p>
<p>Il est par exemple possible de faire des
initialisations dans le constructeur de la classe mère et d'invoquer ce
constructeur dans les constructeurs des classes filles.</p>
<p>&nbsp;</p>
<h2 class="TITRESECTION1"><!--nchpdeb--><a name="junit-3">101.3. <!--nchpfin-->L'exécution des tests</a></h2>
<p>JUnit propose trois applications
différentes nommées TestRunner pour exécuter les tests en mode ligne de commande ou
application graphique :</p>
<ul>
  <li>une application console : junit.textui.TestRunner qui est très rapide et adaptée à
    une intégration dans un processus de générations automatiques.</li>
  <li>une application graphique avec une interface Swing : junit.swingui.TestRunner</li>
  <li>une application graphique avec une interface AWT : junit.awtui.TestRunner</li>
</ul>
<p>Quelque soit l'application utilisée, les
entités suivantes doivent être incluses dans le classpath :</p>
<ul>
  <li>le fichier junit.jar</li>
  <li>classes à tester et les classes des cas de tests</li>
  <li>les classes et bibliothèques dont toutes ces classes dépendent</li>
</ul>
<p>Suite à l'exécution d'un cas de test, celui-ci peut avoir un des trois états suivants :</p>
<ul>
  <li>échoué : une exception de type AssertionFailedError est levée</li>
  <li>en erreur
    : une exception non émise par le framework et non capturée a été levée dans les
    traitements</li>
  <li>passé avec succès</li>
</ul>
<p>L'échec d'un seul cas de test entraîne l'échec du test complet.</p>
<p>L'échec d'un cas de test peut avoir plusieurs origines :</p>
<ul>
  <li>le cas de test contient un ou plusieurs bugs</li>
  <li>le code à tester contient un ou plusieurs bugs</li>
  <li>le cas de test est mal défini</li>
  <li>une combinaison des cas précédents simultanément</li>
</ul>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-3-1">101.3.1. <!--nchpfin-->L'exécution des tests dans la console</a></h3>
<p>L'utilisation de l'application console
nécessite quelques paramètres :</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_193772"><div class="bar     "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_193772_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_193772" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">C:\&gt;java -cp junit.jar;. junit.textui.TestRunner MaClasseTest</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Le seul paramètre obligatoire est le nom de
la classe de tests. Celle-ci doit obligatoirement être sous la forme pleinement
qualifiée si elle appartient à un package.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_776118"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_776118_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_776118" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">C:\&gt;java -cp junit.jar;. junit.textui.TestRunner com.jmdoudoux.test.junit.MaClasseTest</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Il est possible de faire appel au
TestRunner dans une application en utilisant sa méthode run() à laquelle on passe en
paramètre un objet de type Class qui encapsule la classe de tests à exécuter.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_830807"><div class="bar   "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_830807_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_830807" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">public class TestJUnit1 {</code></span></span></div><div class="line alt2"><code class="number">2.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">public static void main(String[] args) {</code></span></span></div><div class="line alt1"><code class="number">3.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">junit.textui.TestRunner.run(MaClasseTest.class);</code></span></span></div><div class="line alt2"><code class="number">4.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">5.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Le TestRunner affiche le résultat de l'exécution des tests dans la console.</p>
<p>La première ligne contient un caractère
point pour chaque test exécuté. Lorsque de nombreux tests sont exécutés cela
permet de suivre la progression.</p>
<p>Le temps total d'exécution en seconde est ensuite affiché sur la ligne "Time:"</p>
<p>Enfin, un résumé des résultats de l'exécution est affiché.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_235596"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_235596_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_235596" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">.</code></span></span></div><div class="line alt2"><code class="number">2.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Time: 0,078</code></span></span></div><div class="line alt1"><code class="number">3.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">4.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">OK (1 test)</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>En cas d'erreur, la première ligne contient
un F à la suite du caractère point correspondant au cas de test en échec.</p>
<p>Le résumé de l'exécution affiche le détail
de chaque cas de tests qui a échoué.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_739871"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_739871_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_739871" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">.F</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Time: 0,063</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">There was 1 failure:</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">1) testCalculer(com.jmdoudoux.test.junit.MaClasseTest)junit.framework.AssertionFailedError:</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;</code><span class="block" style="margin-left: 7px !important;"><code class="plain">expected:&lt;3&gt; but was:&lt;2&gt;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at com.jmdoudoux.test.junit.MaClasseTest.testCalculer(MaClasseTest.java:9)</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at com.jmdoudoux.test.junit.MaClasseTest.main(MaClasseTest.java:13)</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">FAILURES!!!</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Tests run: 1,&nbsp; Failures: 1,&nbsp; Errors: 0</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Les cas en échec (failures) correspondent à une vérification faite par une méthode assertXXX() qui a échoué.</p>
<p>Les cas en erreur (errors) correspondent à la levée inattendue d'une exception lors de l'exécution du cas de test.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-3-2">101.3.2. <!--nchpfin-->L'exécution des tests dans une application graphique</a></h3>
<p>Pour utiliser des classes de tests avec ces applications graphiques, il faut obligatoirement que les classes de tests et
toutes celles dont elles dépendent soient incluses dans le CLASSPATH. Elles
doivent obligatoirement être sous la forme de fichier .class non inclus dans un fichier jar.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_131864"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_131864_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_131864" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">C:\java\testjunit&gt;java -cp junit.jar;. junit.swingui.TestRunner MaClasseTest</code></span></span></div></div></div></td></tr></tbody></table><br>
<p align="center"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/junit001.jpg" alt=" " border="0" height="491" width="489"></p>
<p>Il suffit de cliquer sur le bouton "Run" pour lancer l'exécution des tests.</p>
<p align="center"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/junit002.jpg" alt=" " border="0" height="491" width="489"></p>
<p>C:\java\testjunit&gt;java -cp junit.jar;. junit.awtui.TestRunner MaClasseTest</p>
<p align="center"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/junit003.jpg" alt=" " border="0" height="428" width="498"></p>
<p>La case à cocher "Reload classes every
run" indique à JUnit de recharger les classes à chaque exécution. Ceci est
très pratique car cela permet de modifier les classes et de laisser
l'application de tests ouverte.</p>
<p>Si un ou plusieurs tests échouent la barre
de résultats n'est plus verte mais rouge. Dans ce cas, le nombre d'erreurs et
d'échecs est affiché ainsi que leur liste complète. Il suffit d'en sélectionner
un pour obtenir le détail de la raison du problème.</p>
<p>Il est aussi possible de ne réexécuter que le cas sélectionné.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-3-3">101.3.3. <!--nchpfin-->L'exécution d'une classe de tests&nbsp;</a></h3>
<p>Il est possible
de définir une classe main() dans une classe de tests qui va se charger d'exécuter les tests.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_412307"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_412307_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_412307" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasseTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt2"><code class="number">2.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">...</code></span></span></div><div class="line alt1"><code class="number">3.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></span></span></div><div class="line alt2"><code class="number">4.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">junit.textui.TestRunner.run(</code><code class="keyword">new</code> <code class="plain">TestSuite(MaClasseTest.</code><code class="keyword">class</code><code class="plain">));</code></span></span></div><div class="line alt1"><code class="number">5.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">6.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-3-4">101.3.4. <!--nchpfin-->L'exécution répétée d'un cas de test</a></h3>
<p>JUnit propose la classe junit.extensions.RepeatedTest
qui permet d'exécuter plusieurs fois la même suite de tests.</p>
<p>Le constructeur de cette classe attend en
paramètre une instance de la suite de tests et le nombre de répétitions de
l'exécution de la suite de tests.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_800480"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_800480_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_800480" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.extensions.RepeatedTest;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.Test;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestCase;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestSuite;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">PersonneTest(String name) {</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(name);</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Test suite() {</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">RepeatedTest(</code><code class="keyword">new</code> <code class="plain">TestSuite(PersonneTest.</code><code class="keyword">class</code><code class="plain">), </code><code class="value">5</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">junit.textui.TestRunner.run(suite());</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-3-5">101.3.5. <!--nchpfin-->L'exécution concurrente de tests</a></h3>
<p>JUnit propose la classe
junit.extensions.ActiveTestSuite qui permet d'exécuter plusieurs suites de
tests chacune dans un thread dédié. Ainsi l'exécution des suites de tests se
fait de façon concurrente.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_481815"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_481815_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_481815" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.extensions.ActiveTestSuite;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.Test;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestCase;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestSuite;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">PersonneTest(String name) {</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(name);</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Test suite() {</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">TestSuite suite = </code><code class="keyword">new</code> <code class="plain">ActiveTestSuite();</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">suite.addTest(</code><code class="keyword">new</code> <code class="plain">TestSuite(PersonneTest.</code><code class="keyword">class</code><code class="plain">));</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">suite.addTest(</code><code class="keyword">new</code> <code class="plain">TestSuite(PersonneTest.</code><code class="keyword">class</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">suite.addTest(</code><code class="keyword">new</code> <code class="plain">TestSuite(PersonneTest.</code><code class="keyword">class</code><code class="plain">));</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">suite;</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">junit.textui.TestRunner.run(suite());</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>L'ensemble de la suite de tests ne se
termine que lorsque tous les threads sont terminés.</p>
<p>Même si cela n'est pas recommandé, la classe ActiveTestSuite peut être utilisée comme un outil de charge
rudimentaire. Il est ainsi possible de combiner l'utilisation des classes ActiveTestsuite et RepeatedTest.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_22069"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_22069_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_22069" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.extensions.ActiveTestSuite;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.extensions.RepeatedTest;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.Test;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestCase;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestSuite;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">PersonneTest(String name) {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(name);</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Test suite() {</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">TestSuite suite = </code><code class="keyword">new</code> <code class="plain">ActiveTestSuite();</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">suite.addTest(</code><code class="keyword">new</code> <code class="plain">RepeatedTest(</code><code class="keyword">new</code> <code class="plain">TestSuite(PersonneTest.</code><code class="keyword">class</code><code class="plain">), </code><code class="value">10</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">suite.addTest(</code><code class="keyword">new</code> <code class="plain">RepeatedTest(</code><code class="keyword">new</code> <code class="plain">TestSuite(PersonneTest.</code><code class="keyword">class</code><code class="plain">), </code><code class="value">20</code><code class="plain">));</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">suite;</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">junit.textui.TestRunner.run(suite());</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h2 class="TITRESECTION1"><!--nchpdeb--><a name="junit-4">101.4. <!--nchpfin-->Les suites de tests</a></h2>
<p>Les suites de tests permettent de regrouper
plusieurs tests dans une même classe. Ceci permet l'automatisation de
l'ensemble des tests inclus dans la suite et de préciser leur ordre d'exécution.</p>
<p>Pour créer une suite, il suffit de créer
une classe de type TestSuite et d'appeler la méthode addTest() pour chaque
classe de tests à ajouter. Celle-ci attend en paramètre une instance de la
classe de tests qui sera ajoutée à la suite. L'objet de type TestSuite ainsi
créé doit être renvoyé par une méthode dont la signature doit obligatoirement
être public static Test suite(). Celle-ci sera appelée par introspection par le TestRunner.</p>
<p>Il peut être pratique de définir une
méthode main() dans la classe qui encapsule la suite de tests pour pouvoir
exécuter le TestRunner de la console en exécutant directement la méthode
statique Run(). Ceci évite de lancer JUnit sur la ligne de commandes.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_525882"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_525882_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_525882" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">ExecuterLesTests {</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Test suite() {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">TestSuite suite = </code><code class="keyword">new</code> <code class="plain">TestSuite(</code><code class="string">"Tous les tests"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">suite.addTestSuite(MaClasseTest.</code><code class="keyword">class</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">suite.addTestSuite(MaClasse2Test.</code><code class="keyword">class</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">suite;</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String args[]) {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">junit.textui.TestRunner.run(suite());</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Deux versions surchargées des constructeurs permettent de donner un nom à la suite de tests.</p>
<p>Un constructeur de la classe TestSuite permet de créer automatiquement par introspection une suite de tests contenant
tous les tests de la classe fournie en paramètre.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_623389"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_623389_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_623389" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.*;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">ExecuterLesTests2 {</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Test suiteDeTests() {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">TestSuite suite = </code><code class="keyword">new</code> <code class="plain">TestSuite(MaClasseTest.</code><code class="keyword">class</code><code class="plain">,</code><code class="string">"Tous les tests"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">suite;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String args[]) {</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">junit.textui.TestRunner.run(suiteDeTests());</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Pour éviter d'avoir à gérer une suite de
tests, il est possible d'utiliser la tâche Ant optionnelle junit pour exécuter
un ensemble de cas de tests en fonction d'un filtre sur le nom des classes.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_368853"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_368853_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_368853" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">&lt;</code><code class="keyword">junit</code> <code class="color1">printsummary</code><code class="plain">=</code><code class="string">"yes"</code> <code class="color1">haltonfailure</code><code class="plain">=</code><code class="string">"yes"</code><code class="plain">&gt;</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">...</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">&lt;</code><code class="keyword">batchtest</code> <code class="color1">fork</code><code class="plain">=</code><code class="string">"yes"</code><code class="plain">&gt;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">&lt;</code><code class="keyword">fileset</code> <code class="color1">dir</code><code class="plain">=</code><code class="string">"${src.dir}"</code><code class="plain">&gt;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 49px !important;"><code class="plain">&lt;</code><code class="keyword">include</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"**/Test*.java"</code> <code class="plain">/&gt;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">&lt;/</code><code class="keyword">fileset</code><code class="plain">&gt;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">&lt;/</code><code class="keyword">batchtest</code><code class="plain">&gt;</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">&lt;/</code><code class="keyword">junit</code><code class="plain">&gt; </code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...&nbsp;&nbsp;&nbsp;&nbsp; </code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Le détail de la mise en oeuvre de JUnit avec Ant est couvert dans la section suivante.</p>
<p>La méthode addTestSuite() permet d'ajouter à une suite une autre suite.</p>
<p>&nbsp;</p>
<h2 class="TITRESECTION1"><!--nchpdeb--><a name="junit-5">101.5. <!--nchpfin-->L'automatisation des tests avec Ant</a></h2>
<p>L'automatisation des tests fait par JUnit au moment de la génération de l'application est particulièrement pratique.
Ainsi Ant propose une tâche optionnelle dédiée nommée junit pour exécuter un TestRunner dans la console.</p>
<p>Pour pouvoir utiliser cette tâche, les
fichiers junit.jar (fourni avec JUnit) et optional.jar (fourni avec Ant)
doivent être accessibles dans le CLASSSPATH.</p>
<p>Cette tâche possède plusieurs attributs dont aucun n'est obligatoire et les principaux sont :</p>
<div align="center">
<table class="tableau" align="center" border="1" cellpadding="4" cellspacing="0" width="100%">
 <tbody><tr>
  <td>
  <p>Attribut</p>
  </td>
  <td>
  <p>Rôle</p>
  </td>
  <td>
  <p>Valeur par défaut</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>printsummary</p>
  </td>
  <td>
  <p>affiche un résumé statistique de
  l'exécution de chaque test</p>
  </td>
  <td>
  <p>off</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>fork</p>
  </td>
  <td>
  <p>exécution du TestRunner dans un
  JVM séparée</p>
  </td>
  <td>
  <p>off</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>haltonerror</p>
  </td>
  <td>
  <p>arrêt de la génération en cas
  d'erreur</p>
  </td>
  <td>
  <p>off</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>haltonfailure</p>
  </td>
  <td>
  <p>arrêt de la génération en cas
  d'échec d'un test</p>
  </td>
  <td>
  <p>off</p>
  </td>
 </tr>
 <tr>
  <td>
  <p>outfile</p>
  </td>
  <td>
  <p>base du nom du fichier qui va
  contenir les résultats de l'exécution</p>
  </td>
  <td>&nbsp;</td>
 </tr>
</tbody></table><br>
</div>
<p>La tâche &lt;junit&gt; peut avoir les
éléments fils suivants : &lt;jvmarg&gt;, &lt;sysproperty&gt;, &lt;env&gt;,
&lt;formatter&gt;, &lt;test&gt;, &lt;batchtest&gt;</p>
<p>L'élément &lt;formatter&gt; permet de
préciser le format de sortie des résultats de l'exécution des tests. Il possède
l'attribut type qui précise le format (les valeurs possibles sont : xml, plain
ou brief) et l'attribut usefile qui précise si les résultats doivent être
envoyés dans un fichier (les valeurs possibles sont : true ou false)</p>
<p>L'élément &lt;test&gt; permet de préciser
un cas de test simple ou une suite de test selon le contenu de la classe
précisée par l'attribut name. Cet élément possède de nombreux attributs et il
est possible d'utiliser un élément fils de type &lt;formatter&gt; pour définir
le format de sortie du test.</p>
<p>L'élément &lt;batchtest&gt; permet de
réaliser toute une série de tests. Cet élément possède de nombreux attributs et
il est possible d'utiliser un élément fils de type &lt;formatter&gt; pour
définir le format de sortie des tests. Les différentes classes dont les tests
sont à exécuter sont précisées par un élément fils &lt;fileset&gt;.</p>
<p>La tâche &lt;junit&gt; doit être exécutée après la compilation des classes à tester.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : extrait d'un fichier build.xml pour Ant</td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_185632"><div class="bar                             "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_185632_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_185632" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">&lt;?</code><code class="keyword">xml</code> <code class="color1">version</code><code class="plain">=</code><code class="string">"1.0"</code> <code class="color1">encoding</code><code class="plain">=</code><code class="string">"ISO-8859-1"</code> <code class="plain">?&gt;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">&lt;</code><code class="keyword">project</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"TestAnt1"</code> <code class="color1">default</code><code class="plain">=</code><code class="string">"all"</code><code class="plain">&gt;</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 21px !important;"><code class="plain">&lt;</code><code class="keyword">description</code><code class="plain">&gt;Génération de l'application&lt;/</code><code class="keyword">description</code><code class="plain">&gt;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 35px !important;"><code class="plain">&lt;</code><code class="keyword">property</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"bin"</code> <code class="color1">location</code><code class="plain">=</code><code class="string">"bin"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">&lt;</code><code class="keyword">property</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"src"</code> <code class="color1">location</code><code class="plain">=</code><code class="string">"src"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">&lt;</code><code class="keyword">property</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"build"</code> <code class="color1">location</code><code class="plain">=</code><code class="string">"build"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">&lt;</code><code class="keyword">property</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"doc"</code> <code class="color1">location</code><code class="plain">=</code><code class="string">"${build}/doc"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">&lt;</code><code class="keyword">property</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"lib"</code> <code class="color1">location</code><code class="plain">=</code><code class="string">"${build}/lib"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">&lt;</code><code class="keyword">property</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"junit_path"</code> <code class="color1">value</code><code class="plain">=</code><code class="string">"junit.jar"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">...</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">&lt;</code><code class="keyword">target</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"test"</code> <code class="color1">depends</code><code class="plain">=</code><code class="string">"compil"</code> <code class="color1">description</code><code class="plain">=</code><code class="string">"Executer les tests avec JUnit"</code><code class="plain">&gt;</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 77px !important;"><code class="plain">&lt;</code><code class="keyword">junit</code> <code class="color1">fork</code><code class="plain">=</code><code class="string">"yes"</code> <code class="color1">haltonerror</code><code class="plain">=</code><code class="string">"true"</code> <code class="color1">haltonfailure</code><code class="plain">=</code><code class="string">"on"</code> <code class="color1">printsummary</code><code class="plain">=</code><code class="string">"on"</code><code class="plain">&gt;</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 98px !important;"><code class="plain">&lt;</code><code class="keyword">formatter</code> <code class="color1">type</code><code class="plain">=</code><code class="string">"plain"</code> <code class="color1">usefile</code><code class="plain">=</code><code class="string">"false"</code> <code class="plain">/&gt;</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 98px !important;"><code class="plain">&lt;</code><code class="keyword">test</code> <code class="color1">name</code><code class="plain">=</code><code class="string">"ExecuterLesTests"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 98px !important;"><code class="plain">&lt;</code><code class="keyword">classpath</code><code class="plain">&gt;</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 119px !important;"><code class="plain">&lt;</code><code class="keyword">pathelement</code> <code class="color1">location</code><code class="plain">=</code><code class="string">"${bin}"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 119px !important;"><code class="plain">&lt;</code><code class="keyword">pathelement</code> <code class="color1">location</code><code class="plain">=</code><code class="string">"${junit_path}"</code><code class="plain">/&gt;</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 98px !important;"><code class="plain">&lt;/</code><code class="keyword">classpath</code><code class="plain">&gt;</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 77px !important;"><code class="plain">&lt;/</code><code class="keyword">junit</code><code class="plain">&gt;</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">&lt;/</code><code class="keyword">target</code><code class="plain">&gt;</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">...</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 21px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">&lt;/</code><code class="keyword">project</code><code class="plain">&gt;</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Cet exemple exécute les tests de la suite
de tests encapsulés dans la classe ExecuterLesTests</p>
<p>&nbsp;</p>
<h2 class="TITRESECTION1"><!--nchpdeb--><a name="junit-6">101.6. <!--nchpfin-->JUnit 4</a></h2>
<p>JUnit version 4 est une évolution majeure depuis les quelques années d'utilisation de la version 3.8.</p>
<p>Un des grands bénéfices de cette version est
l'utilisation des annotations introduites dans Java 5. La définition des cas de
tests et des tests ne se fait donc plus sur des conventions de nommage et sur
l'introspection mais sur l'utilisation d'annotations ce qui facilite la rédaction des cas de tests.</p>
<p>Une compatibilité descendante est assurée avec les suites de tests de JUnit 3.8.</p>
<p>JUnit 4 requiert une version 5 ou ultérieure de Java.</p>
<p>Le nom du package des classes de JUnit est différent entre la version 3 et 4 :</p>
<ul>
  <li>les classes de Junit 3 sont dans le package junit.framework.</li>
  <li>les classes de Junit 4 sont dans le package org.junit.</li>
</ul>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-1">101.6.1. <!--nchpfin-->La définition d'une classe de tests</a></h3>
<p>Une classe de tests n'a plus l'obligation
d'étendre la classe TestCase sous réserve d'utiliser les annotations définies
par JUnit et d'utiliser des imports static sur les méthodes de la classe org.junit.Assert.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_144645"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_144645_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_144645" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit4;</code></span></span></div><div class="line alt2"><code class="number">2.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">3.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.*;</code></span></span></div><div class="line alt2"><code class="number">4.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></span></span></div><div class="line alt1"><code class="number">5.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">6.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">MaClasse {</code></span></span></div><div class="line alt1"><code class="number">7.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">8.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-2">101.6.2. <!--nchpfin-->La définition des cas de tests</a></h3>
<p>Les méthodes contenant les cas de tests
n'ont plus d'obligation à utiliser la convention de nommage qui imposait de
préfixer le nom des méthodes par test.</p>
<p>Avec JUnit 4, il suffit d'annoter la méthode avec l'annotation @Test.</p>
<p>Il est ainsi possible d'utiliser n'importe quelle méthode comme cas de test simplement en utilisant l'annotation @Test.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_896013"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_896013_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_896013" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt2"><code class="number">2.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">getNom() {</code></span></span></div><div class="line alt1"><code class="number">3.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">assertEquals(</code><code class="string">"est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom1"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt2"><code class="number">4.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Ceci permet d'utiliser le nom de méthode
que l'on souhaite. Il est cependant conseillé de définir et d'utiliser une
convention de nommage qui facilitera l'identification des classes de tests et
des cas de tests. Il est par exemple possible de maintenir les conventions de
nommage de JUnit 3.</p>
<p>L'annotation @Ignore permet de demander au
framework d'ignorer un cas de tests. Les cas de tests dans ce cas sont marqués
avec la lettre I lors de leur exécution en mode console.</p>
<p>Attention : l'utilisation de l'annotation
@Ignore devrait être temporaire et justifié. Son utilisation ne doit pas
devenir une solution à certains problèmes.</p>
<p>JUnit 4 inclut deux nouvelles surcharges de
la méthode assertEquals() qui permettent de comparer deux tableaux d'objets. La
comparaison se fait sur le nombre d'occurrences dans les tableaux et sur
l'égalité de chaque objet d'un tableau dans l'autre tableau.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-3">101.6.3. <!--nchpfin-->L'initialisation des cas de tests</a></h3>
<p>JUnit 3 imposait une redéfinition des
méthodes setUp() et TearDown() pour définir des traitements exécutés
systématiquement avant et après chaque cas de test.</p>
<p>JUnit 4 propose simplement d'annoter la
méthode exécutée avant avec l'annotation @Before et la méthode exécutée après
avec l'annotation @After.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_692549"><div class="bar                                                                                        "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_692549_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_692549" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="color1">@Before</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">initialiser() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">personne = </code><code class="keyword">new</code> <code class="plain">Personne(</code><code class="string">"nom1"</code><code class="plain">,</code><code class="string">"prenom1"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="color1">@After</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">nettoyer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">personne = </code><code class="keyword">null</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Il est possible d'annoter une ou plusieurs
méthodes avec @Before ou @After. Dans ce cas, toutes les méthodes seront
invoquées au moment correspondant à leur annotation.</p>
<p>Il n'est pas nécessaire d'invoquer
explicitement les méthodes annotées avec @Before et @After d'une classe mère.
Tant que ces méthodes ne sont pas redéfinies, elles seront automatiquement
invoquées lors de l'exécution des tests :</p>
<ul>
  <li>les méthodes annotées avec @Before de la classe mère seront invoquées avant celles
    de la classe fille</li>
  <li>les méthodes annotées avec @After de la classe fille seront invoquées avant celles de
    la classe mère</li>
</ul>
<p>JUnit 4 propose simplement d'annoter une ou
plusieurs méthodes exécutées avant l'exécution du premier cas de tests avec
l'annotation @BeforeClass et une ou plusieurs méthodes exécutées après
l'exécution de tous les cas de test de la classe avec l'annotation @AfterClass.</p>
<p>Ces initialisations peuvent être très
utiles notamment pour des connexions coûteuses à des ressources qu'il est
préférable de ne réaliser qu'une seule fois plutôt qu'à chaque cas de tests.
Ceci peut contribuer à améliorer les performances lors de l'exécution des tests.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-4">101.6.4. <!--nchpfin-->Le test de la levée d'exceptions</a></h3>
<p>Avec JUnit 3, pour vérifier la levée d'une
exception dans un cas de test, il faut entourer l'appel du traitement dans un
bloc try/catch et invoquer la méthode fail() à la fin du bloc try.</p>
<p>JUnit 4 propose une annotation pour faciliter la vérification de la lever d'une exception.</p>
<p>L'attribut expected de l'annotation @Test attend comme valeur la classe de l'exception qui devrait être levée.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_330984"><div class="bar  "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_330984_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_330984" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">1.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="color1">@Test</code><code class="plain">(expected=IllegalArgumentException.</code><code class="keyword">class</code><code class="plain">) </code></span></span></div><div class="line alt2"><code class="number">2.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setNom() {</code></span></span></div><div class="line alt1"><code class="number">3.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">personne.setNom(</code><code class="string">"nom2"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">4.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom2"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt1"><code class="number">5.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">personne.setNom(</code><code class="keyword">null</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">6.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Si lors de l'exécution du test l'exception
du type précisée n'est pas levée (aucune exception levée ou une autre exception
est levée) alors le test échoue.</p>
<p>Attention : l'utilisation de l'annotation
ne permet que de vérifier que l'exception est levée. Pour vérifier des
propriétés de l'exception, il est nécessaire d'utiliser le mécanisme utilisé
avec JUnit 3 pour capturer l'exception et ainsi avoir accès aux membres de son instance.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-5">101.6.5. <!--nchpfin-->L'exécution des tests</a></h3>
<p>Les applications graphiques AWT et Swing permettant l'exécution et l'affichage des résultats des cas de tests ne sont
plus fournies avec JUnit 4.</p>
<p>JUnit laisse le soin de cette restitution aux IDE qui intègrent JUnit 4 comme par exemple Eclipse.</p>
<p>Une autre grande différence dans la façon
d'exécuter les cas de tests avec JUnit 4 concerne le fait qu'il n'y a plus de
différence entre un test échoué (échec d'une méthode assert() ou appel à la
méthode fail()) et un test en erreur (une exception inattendue est levée).</p>
<p>Lors de l'exécution, si un avertissement de
type "AssertionFailedError: No tests found in XXX" est fourni par
JUnit c'est n'y a aucun cas de tests de fourni dans la classe (aucune méthode
n'est annotées avec l'annotation @Test).</p>
<p>Dans une classe de tests, il est toujours possible de définir une classe main() qui permettent de demander l'exécution
des cas de tests de la classe. Il faut invoquer la méthode main() de la classe org.junit.runner.JUnitCore.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_678818"><div class="bar                                                         "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_678818_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_678818" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit4;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertEquals;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertNotNull;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.After;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Before;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest {</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Before</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">initialiser() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">new</code> <code class="plain">Personne(</code><code class="string">"nom1"</code><code class="plain">,</code><code class="string">"prenom1"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@After</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">nettoyer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">null</code><code class="plain">;</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">personne() {</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertNotNull(</code><code class="string">"L'instance est créée"</code><code class="plain">, personne);</code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">org.junit.runner.JUnitCore.main(</code><code class="string">"com.jmdoudoux.test.junit4.PersonneTest"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-6">101.6.6. <!--nchpfin-->Un exemple de migration de JUnit 3 vers JUnit 4</a></h3>
<p>La section ci-dessous propose une classe qui encapsule des tests avec JUnit 3 et une classe qui propose des
fonctionnalités équivalentes en JUnit 4.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple avec JUnit 3 : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_133839"><div class="bar "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_133839_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_133839" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">junit.framework.TestCase;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest </code><code class="keyword">extends</code> <code class="plain">TestCase {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="plain">PersonneTest(String name) {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">(name);</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">setUp() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.setUp();</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">new</code> <code class="plain">Personne(</code><code class="string">"nom1"</code><code class="plain">,</code><code class="string">"prenom1"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">protected</code> <code class="keyword">void</code> <code class="plain">tearDown() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">super</code><code class="plain">.tearDown();</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">null</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testPersonne() {</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertNotNull(</code><code class="string">"L'instance est créée"</code><code class="plain">, personne);</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testGetNom() {</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom1"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSetNom() {</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setNom(</code><code class="string">"nom2"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom2"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testGetPrenom() {</code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom1"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt2"><code class="number">38.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">39.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">40.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSetPrenom() {</code></span></span></div><div class="line alt1"><code class="number">41.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setPrenom(</code><code class="string">"prenom2"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">42.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom2"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt1"><code class="number">43.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">44.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple avec JUnit 4 : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_766049"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_766049_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_766049" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit4;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertEquals;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertNotNull;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.After;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Before;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest {</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">private</code> <code class="plain">Personne personne;</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Before</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">initialiser() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">new</code> <code class="plain">Personne(</code><code class="string">"nom1"</code><code class="plain">,</code><code class="string">"prenom1"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@After</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">nettoyer() </code><code class="keyword">throws</code> <code class="plain">Exception {</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne = </code><code class="keyword">null</code><code class="plain">;</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">personne() {</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertNotNull(</code><code class="string">"L'instance est créée"</code><code class="plain">, personne);</code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">getNom() {</code></span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom1"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code><code class="plain">(expected=IllegalArgumentException.</code><code class="keyword">class</code><code class="plain">) </code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setNom() {</code></span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setNom(</code><code class="string">"nom2"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que nom est correct"</code><code class="plain">, </code><code class="string">"nom2"</code><code class="plain">, personne.getNom());</code></span></span></div><div class="line alt2"><code class="number">38.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setNom(</code><code class="keyword">null</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">39.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">40.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">41.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt2"><code class="number">42.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">getPrenom() {</code></span></span></div><div class="line alt1"><code class="number">43.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom1"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt2"><code class="number">44.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">45.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">46.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">47.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">setPrenom() {</code></span></span></div><div class="line alt2"><code class="number">48.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">personne.setPrenom(</code><code class="string">"prenom2"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">49.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertEquals(</code><code class="string">"Est ce que prenom est correct"</code><code class="plain">, </code><code class="string">"prenom2"</code><code class="plain">, personne.getPrenom());</code></span></span></div><div class="line alt2"><code class="number">50.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">51.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-7">101.6.7. <!--nchpfin-->La limitation du temps d'exécution d'un cas de test</a></h3>
<p>JUnit 4 propose une fonctionnalité rudimentaire pour vérifier qu'un cas de tests s'exécute dans un
temps maximum donné.</p>
<p>L'attribut timeout de l'annotation @Test attend comme valeur un délai maximum d'exécution exprimé en millisecondes.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_322903"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_322903_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_322903" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit4;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertEquals;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertNotNull;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.After;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Before;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest {</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code><code class="plain">(timeout=</code><code class="value">100</code><code class="plain">)</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">compteur() {</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">for</code><code class="plain">(</code><code class="keyword">long</code> <code class="plain">i = </code><code class="value">0</code> <code class="plain">; i &lt; </code><code class="value">999999999</code><code class="plain">; i++) { </code><code class="keyword">long</code> <code class="plain">a = i + </code><code class="value">1</code><code class="plain">; }</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">org.junit.runner.JUnitCore.main(</code><code class="string">"com.jmdoudoux.test.junit4.PersonneTest"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Si le temps d'exécution du cas de tests est supérieur au temps fourni, alors le cas de tests échoue.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Résultat : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_251529"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_251529_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_251529" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">JUnit version 4.3.1</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">......E</code></span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Time: 0,141</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">There was 1 failure:</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">1) compteur(com.jmdoudoux.test.junit4.PersonneTest)</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">java.lang.Exception: test timed out after 100 milliseconds</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.TestMethodRunner.runWithTimeout</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">(TestMethodRunner.java:68)</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.TestMethodRunner.run</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">(TestMethodRunner.java:43)</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">(TestClassMethodsRunner.java:66)</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.TestClassMethodsRunner.run</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">(TestClassMethodsRunner.java:35)</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.TestClassRunner$1.runUnprotected</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">(TestClassRunner.java:42)</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.BeforeAndAfterRunner.runProtected</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">(BeforeAndAfterRunner.java:34)</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.internal.runners.CompositeRunner.run(CompositeRunner.java:29)</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.runner.JUnitCore.run(JUnitCore.java:130)</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.runner.JUnitCore.run(JUnitCore.java:109)</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.runner.JUnitCore.run(JUnitCore.java:100)</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.runner.JUnitCore.runMain(JUnitCore.java:81)</code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at org.junit.runner.JUnitCore.main(JUnitCore.java:44)</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">at com.jmdoudoux.test.junit4.PersonneTest.main(PersonneTest.java:58)</code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">FAILURES!!!</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">Tests run: 6,&nbsp; Failures: 1&lt;b&gt;&lt;/b&gt;</code></span></span></div></div></div></td></tr></tbody></table>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-8">101.6.8. <!--nchpfin-->Les tests paramétrés</a></h3>
<p>&nbsp;</p>
<table class="tableau" border="0" width="100%">
  <tbody><tr> 
    <td>
      <div align="Center"><img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/construct4.gif" alt="en construction" height="50" width="144"><br>
      </div>
   </td>
  </tr>
  <tr> 
    <td>
      <div align="Center">Cette section sera développée dans une version future de ce document</div>
   </td>
  </tr>
</tbody></table><br>

<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-9">101.6.9. <!--nchpfin-->La rétro compatibilité</a></h3>
<p>Il est possible d'exécuter des tests JUnit 4 dans une application d'exécution de Tests JUnit 3.</p>
<p>Pour cela, il faut dans la classe de tests, ajouter une méthode suite() qui retourne un objet de type junit.framework.Test.
Cette méthode instancie un objet de type JUnit4TestAdapter qui attend comme
paramètre de son constructeur l'objet class de la classe  de tests.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_93705"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_93705_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_93705" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test.junit4;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertEquals;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertNotNull;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.After;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Before;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PersonneTest {</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">...</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;</code><span class="block" style="margin-left: 7px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">junit.framework.Test suite() {</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="keyword">new</code> <code class="plain">JUnit4testAdapter(PersonneTest.</code><code class="keyword">class</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>L'exécution nécessite tout de même une version 5 ou supérieure de Java.</p>
<p>&nbsp;</p>
<h3 class="TITRESECTION2"><!--nchpdeb--><a name="junit-6-10">101.6.10. <!--nchpfin-->L'organisation des tests</a></h3>
<p>Il est généralement préférable de n'avoir qu'un seul assert par test car un test ne devrait avoir qu'une seule raison d'échouer.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_627241"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_627241_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_627241" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">SecuriteHelper {</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">boolean</code> <code class="plain">isMotDePasseValide(String mdp) {</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">boolean</code> <code class="plain">resultat = </code><code class="keyword">true</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">if</code> <code class="plain">(mdp == </code><code class="keyword">null</code><code class="plain">) {</code></span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">resultat = </code><code class="keyword">false</code><code class="plain">;</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="keyword">throw</code> <code class="keyword">new</code> <code class="plain">IllegalArgumentException(</code><code class="string">"le mot de passe n'est pas renseigne"</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">} </code><code class="keyword">else</code> <code class="plain">{</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="keyword">if</code> <code class="plain">(mdp.length() &lt; </code><code class="value">6</code> <code class="plain">|| mdp.length() &gt; </code><code class="value">15</code><code class="plain">) {</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">resultat = </code><code class="keyword">false</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="keyword">if</code> <code class="plain">(!mdp.matches(</code><code class="string">".*[a-zA-Z]*[0-9]*[a-zA-Z]"</code><code class="plain">)) {</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 56px !important;"><code class="plain">resultat = </code><code class="keyword">false</code><code class="plain">;</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">}</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">return</code> <code class="plain">resultat;</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>La méthode en exemple permet de valider un mot de passe en contrôlant quelques règles simples :</p>
<ul>
<li>lever une exception si l'argument est null (pour tester la levée de l'exception dans le
cas de test)</li>
<li>la taille doit être comprise entre 6 et 15 caractères</li>
<li>il faut au moins un chiffre entre deux caractères</li>
<li>le dernier caractère doit être une lettre</li>
</ul>
<p>Il est possible d'écrire une classe de tests ne possédant qu'un seul cas de test avec plusieurs asserts.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_42565"><div class="bar"><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_42565_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_42565" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmdoudoux.test;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertFalse;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertTrue;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.fail;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">SecurirteHelperTest {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValide() {</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="keyword">try</code> <code class="plain">{</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="keyword">null</code><code class="plain">);</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">fail(</code><code class="string">"Absence de la levee de l'exception IllegaleArgumentException"</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">} </code><code class="keyword">catch</code> <code class="plain">(IllegalArgumentException iae) {</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="comments">// l'exception est levée</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe est vide"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">""</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe est trop court"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe est trop long"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe ne contient pas de chiffre"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaaaa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe contient un chiffre en derniere position"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaaaa6"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertTrue(</code><code class="string">"Le mot de passe est valide"</code><code class="plain">, </code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aAa6Aa"</code><code class="plain">));</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertTrue(</code><code class="string">"Le mot de passe est valide"</code><code class="plain">, </code></span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"a@aA6aa"</code><code class="plain">));</code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertTrue(</code><code class="string">"Le mot de passe est valide"</code><code class="plain">, </code></span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"abc456def"</code><code class="plain">));</code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>Il est préférable d'écrire une méthode
par cas de test même si cela nécessite l'écriture de plus de code.</p>
<table align="center" border="1" cellpadding="4" cellspacing="0" width="100%"><tbody><tr bgcolor="#A6A5C2"><td>Exemple : </td></tr><tr><td><div class="syntaxhighlighter " id="highlighter_193999"><div class="bar   "><div class="toolbar"><a class="item viewSource" style="width: 16px; height: 16px;" title="view source" href="#viewSource">view source</a><div class="item copyToClipboard"><embed id="highlighter_193999_clipboard" type="application/x-shockwave-flash" title="copy to clipboard" allowscriptaccess="always" wmode="transparent" flashvars="highlighterId=highlighter_193999" menu="false" src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/clipboard.swf" height="16" width="16"></div><a class="item printSource" style="width: 16px; height: 16px;" title="print" href="#printSource">print</a><a class="item about" style="width: 16px; height: 16px;" title="?" href="#about">?</a></div></div><div class="lines"><div class="line alt1"><code class="number">01.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">package</code> <code class="plain">com.jmd.test;</code></span></span></div><div class="line alt2"><code class="number">02.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">03.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertFalse;</code></span></span></div><div class="line alt2"><code class="number">04.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertTrue;</code></span></span></div><div class="line alt1"><code class="number">05.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.fail;</code></span></span></div><div class="line alt2"><code class="number">06.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">07.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></span></span></div><div class="line alt2"><code class="number">08.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">09.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">SecurirteHelperTest {</code></span></span></div><div class="line alt2"><code class="number">10.</code><span class="content"><span class="block" style="margin-left: 0px !important;">&nbsp;</span></span></div><div class="line alt1"><code class="number">11.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code><code class="plain">(expected=IllegalArgumentException.</code><code class="keyword">class</code><code class="plain">)</code></span></span></div><div class="line alt2"><code class="number">12.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideNull() {</code></span></span></div><div class="line alt1"><code class="number">13.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="keyword">null</code><code class="plain">);</code></span></span></div><div class="line alt2"><code class="number">14.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">15.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">16.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">17.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideVide() {</code></span></span></div><div class="line alt2"><code class="number">18.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe est vide"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">19.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">""</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">20.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">21.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">22.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">23.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideTropCourt() {</code></span></span></div><div class="line alt2"><code class="number">24.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe est trop court"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">25.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">26.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">27.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">28.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">29.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideTropLong() {</code></span></span></div><div class="line alt2"><code class="number">30.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe est trop long"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">31.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">32.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">33.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">34.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">35.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideSansChiffre() {</code></span></span></div><div class="line alt2"><code class="number">36.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe ne contient pas de chiffre"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">37.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaaaa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">38.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">39.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">40.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">41.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideChiffreEnDernier() {</code></span></span></div><div class="line alt2"><code class="number">42.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertFalse(</code><code class="string">"Le mot de passe contient un chiffre en derniere position"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">43.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aaaaa6"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">44.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">45.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">46.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">47.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideAvecMinMaj() {</code></span></span></div><div class="line alt2"><code class="number">48.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertTrue(</code><code class="string">"Le mot de passe est valide"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">49.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"aAa6Aa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">50.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">51.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">52.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">53.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideAvecArobase() {</code></span></span></div><div class="line alt2"><code class="number">54.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertTrue(</code><code class="string">"Le mot de passe est valide"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">55.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"a@aA6aa"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">56.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">57.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">58.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="color1">@Test</code></span></span></div><div class="line alt1"><code class="number">59.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testIsMotDePasseValideStandard() {</code></span></span></div><div class="line alt2"><code class="number">60.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 28px !important;"><code class="plain">assertTrue(</code><code class="string">"Le mot de passe est valide"</code><code class="plain">, </code></span></span></div><div class="line alt1"><code class="number">61.</code><span class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><span class="block" style="margin-left: 42px !important;"><code class="plain">SecuriteHelper.isMotDePasseValide(</code><code class="string">"abc456def"</code><code class="plain">));</code></span></span></div><div class="line alt2"><code class="number">62.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;"><code class="plain">}</code></span></span></div><div class="line alt1"><code class="number">63.</code><span class="content"><code class="spaces">&nbsp;&nbsp;</code><span class="block" style="margin-left: 14px !important;">&nbsp;</span></span></div><div class="line alt2"><code class="number">64.</code><span class="content"><span class="block" style="margin-left: 0px !important;"><code class="plain">}</code></span></span></div></div></div></td></tr></tbody></table><br>
<p>En plus de s'assurer que tous les cas de tests sont exécutés même 
s'il y en a un qui échoue cela permet aussi de connaître plus 
précisément le nombre de cas de tests exécutés (10 au lieu de 1 dans 
l'exemple). Les cas de tests sont aussi plus simples donc plus 
maintenables.</p>
<p>Il est cependant possible d'utiliser plusieurs asserts dans un cas de tests si ceux-ci concernent un même cas fonctionnel.</p>
<p>Pour des cas plus concrets, il est peut
être nécessaire d'utiliser des méthodes de type setUp() ou TearDown() au besoin
pour réduire la quantité de code nécessaire à la mise en place du contexte
d'exécution de chaque cas de tests.</p>
<p>&nbsp;</p>
</div>
<!--PIED--><hr>
<table bgcolor="#7B7BC2" border="0" cellpadding="2" cellspacing="0" width="100%">
<tbody>
<tr>
<td rowspan="2" align="center" width="50">&nbsp;</td><td rowspan="2" align="center" width="50">
<a href="http://www.jmdoudoux.fr/java/dej/chap-frameworks-test.htm" alt="100. Les frameworks de tests">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/FlecheG.gif" alt="100. Les frameworks de tests" align="left" border="0" height="31" hspace="0" width="31">
</a>
</td>
<td rowspan="2" align="center" width="50">
<a href="http://www.jmdoudoux.fr/java/dej/chap-objets-mock.htm" alt="102. Les objets de type Mock">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/FlecheD.gif" alt="102. Les objets de type Mock" align="left" border="0" height="31" hspace="0" width="31">
</a>
</td>
<td rowspan="2" align="center">
<a href="javascript:window.print()">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/imprimer.gif" alt="Imprimer" align="middle" border="0" height="40" width="46">
</a>
</td>
<td rowspan="2" align="center">
<a href="http://www.jmdoudoux.fr/java/dej/index.htm">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/index.gif" alt="Sommaire" align="middle" border="0" height="31" hspace="0" width="34">
</a>
</td>
<td rowspan="2" align="center">
<a href="http://www.jmdoudoux.fr/java/dej/indexavecframes.htm" target="_top">
<img src="D%C3%A9veloppons%20en%20Java%20-%20JUnit_files/frame.png" alt="Consulter avec table des matières" align="middle" border="0" height="40" hspace="0" width="46">
</a>
</td>
<td rowspan="2" align="right" valign="middle">
        <script language="JavaScript1.1">
<!--
hsh = new Date();
hsd = document;
//hsr = hsd.referrer.replace(/[<>]/g, '');
hsr = parent.document.referrer.replace(/[<>]/g, '');
hsi = '<a href="http://www.xiti.com/xiti.asp?s=128624"';
hsi += ' TARGET="_top"><img width="39" height="25" border=0 ';
hsi += 'src="http://logv23.xiti.com/hit.xiti?s=128624';
hsi += '&p=';
hsi += '&hl=' + hsh.getHours() + 'x' + hsh.getMinutes() + 'x' + hsh.getSeconds();
if(parseFloat(navigator.appVersion)>=4)
{Xiti_s=screen;hsi += '&r=' + Xiti_s.width + 'x' + Xiti_s.height + 'x' + Xiti_s.pixelDepth + 'x' + Xiti_s.colorDepth;}
hsd.writeln(hsi + '&ref=' + hsr.replace(/&/g, '$') + '" title="Mesurez votre audience"></a>');
//-->
</script><a href="http://www.xiti.com/xiti.asp?s=128624" target="_top"></a>

        <noscript>
        <a href="http://www.xiti.com/xiti.asp?s=128624" target="_top"><img width="39" height="25" border=0 src="http://logv23.xiti.com/hit.xiti?s=128624&p=&" title="Mesurez votre audience"></a>
        </noscript>

      </td>
<td align="right">
<font color="#FFFFFF" size="5"><b><i>Développons en Java&nbsp;&nbsp;</i></b></font><font color="#FFFFFF" size="-1"> v 2.00&nbsp;&nbsp;</font></td>
</tr>
<tr>
<td align="right"><font color="#FFFFFF" size="-1">Copyright (C) 1999-2014 <a class="auteur" href="http://www.jmdoudoux.fr/presentation.htm" rel="author">Jean-Michel DOUDOUX</a>.&nbsp;&nbsp;</font></td>
</tr>
</tbody>
</table>

<script language="javascript">

SyntaxHighlighter.config.clipboardSwf = 'clipboard.swf';

SyntaxHighlighter.all();

</script>



</body></html>