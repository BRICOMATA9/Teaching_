#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// Application_Main
	c0 [label=<<table title="Application_Main" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Application_Main </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - jfxPanel : JFXPanel </td></tr>
<tr><td align="left" balign="left"> - engine : WebEngine </td></tr>
<tr><td align="left" balign="left"> ~ panelconnexion : Panel_connexion </td></tr>
<tr><td align="left" balign="left"> - panelswing : JPanel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Application_Main() </td></tr>
<tr><td align="left" balign="left"> + main(args : String[]) </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> - createScene() </td></tr>
<tr><td align="left" balign="left"> + loadURL(url : String) </td></tr>
<tr><td align="left" balign="left"> - toURL(str : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.Graphique_journalier_totalportefeuille
	c1 [label=<<table title="controleur.Graphique_journalier_totalportefeuille" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Graphique_journalier_totalportefeuille </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + s1 : TimeSeries </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Graphique_journalier_totalportefeuille(title : String) </td></tr>
<tr><td align="left" balign="left"> - createChart(dataset : XYDataset) : JFreeChart </td></tr>
<tr><td align="left" balign="left"> - createDataset() : XYDataset </td></tr>
<tr><td align="left" balign="left"> + createPanelgraph() : ChartPanel </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.Graphique_mensuel_totalportefeuille
	c2 [label=<<table title="controleur.Graphique_mensuel_totalportefeuille" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Graphique_mensuel_totalportefeuille </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + s1_mensuel : TimeSeries </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Graphique_mensuel_totalportefeuille(title : String) </td></tr>
<tr><td align="left" balign="left"> - createChart(dataset : XYDataset) : JFreeChart </td></tr>
<tr><td align="left" balign="left"> - createDataset() : XYDataset </td></tr>
<tr><td align="left" balign="left"> + createPanelgraph() : ChartPanel </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_achatvente_automatique
	c3 [label=<<table title="controleur.bouton_achatvente_automatique" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_achatvente_automatique </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - entreprise : String </td></tr>
<tr><td align="left" balign="left"> - nombre_action : int </td></tr>
<tr><td align="left" balign="left"> - valeur_limite : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_achatvente_automatique(parent : JFrame, title : String, modal : boolean) </td></tr>
<tr><td align="left" balign="left"> - initComponent() </td></tr>
<tr><td align="left" balign="left"> + choixtypetransactionautomatique(entreprise : String, type_transaction : String, type_condition : String, valeur_limite : int, nombreactions : int) </td></tr>
<tr><td align="left" balign="left"> + achatautomatique_audessus(entreprise : String, valeur_limite : int, nombreactions : int) </td></tr>
<tr><td align="left" balign="left"> + achatautomatique_endessous(entreprise : String, valeur_limite : int, nombreactions : int) </td></tr>
<tr><td align="left" balign="left"> + venteautomatique_audessus(entreprise : String, valeur_limite : int, nombreactions : int) </td></tr>
<tr><td align="left" balign="left"> + venteautomatique_endessous(entreprise : String, valeur_limite : int, nombreactions : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_acheter
	c4 [label=<<table title="controleur.bouton_acheter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_acheter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - nombre_actions_a_acheter : String </td></tr>
<tr><td align="left" balign="left"> - nombre_actions_a_acheter_int : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_acheter() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_ajouter
	c5 [label=<<table title="controleur.bouton_ajouter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_ajouter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - Labelquantite : JLabel </td></tr>
<tr><td align="left" balign="left"> - champ_nombreaction : JTextField </td></tr>
<tr><td align="left" balign="left"> - jcb : JComboBox&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> - affichage_valeur : JLabel </td></tr>
<tr><td align="left" balign="left"> - listeentreprise_copie : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - listeentreprise : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - listeIDcorrespondant1 : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - listeIDcorrespondant : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - nombre_actions_entreprise_a_ajouter : String </td></tr>
<tr><td align="left" balign="left"> - valeur_action : double </td></tr>
<tr><td align="left" balign="left"> - okBouton : JButton </td></tr>
<tr><td align="left" balign="left"> - cancelBouton : JButton </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_ajouter(parent : JFrame, title : String, modal : boolean) </td></tr>
<tr><td align="left" balign="left"> - initComponent() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_connexion
	c6 [label=<<table title="controleur.bouton_connexion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_connexion </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
<tr><td align="left" balign="left"> + utilisateurconnecte : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_connexion() </td></tr>
<tr><td align="left" balign="left"> + connexion() : Boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_inscription
	c7 [label=<<table title="controleur.bouton_inscription" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_inscription </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_inscription() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_interdire_achat
	c8 [label=<<table title="controleur.bouton_interdire_achat" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_interdire_achat </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_interdire_achat() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_limite_investissement
	c9 [label=<<table title="controleur.bouton_limite_investissement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_limite_investissement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> + chiffre_limite_investissement : double </td></tr>
<tr><td align="left" balign="left"> - st : Statement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_limite_investissement() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(arg0 : ActionEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_rafraichir
	c10 [label=<<table title="controleur.bouton_rafraichir" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_rafraichir </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_rafraichir() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
<tr><td align="left" balign="left"> + rafraichirtableau() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_rapportpdf
	c11 [label=<<table title="controleur.bouton_rapportpdf" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_rapportpdf </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - liste_jours : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - liste_mois : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - liste_annees : ArrayList&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + checkbox_tri_user : JRadioButton </td></tr>
<tr><td align="left" balign="left"> + checkbox_tri_entreprise : JRadioButton </td></tr>
<tr><td align="left" balign="left"> - Font_Titre : Font </td></tr>
<tr><td align="left" balign="left"> - Font_Sous_Titre : Font </td></tr>
<tr><td align="left" balign="left"> - Font_Header : Font </td></tr>
<tr><td align="left" balign="left"> + date_depart : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_rapportpdf() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
<tr><td align="left" balign="left"> - addMetaData(document : Document) </td></tr>
<tr><td align="left" balign="left"> - addTitlePage(document : Document) </td></tr>
<tr><td align="left" balign="left"> - addContent(document : Document, date_depart : String) </td></tr>
<tr><td align="left" balign="left"> + addEmptyLine(paragraph : Paragraph, number : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_rapportpdf.Popup_rapport_pdf
	c12 [label=<<table title="controleur.bouton_rapportpdf.Popup_rapport_pdf" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Popup_rapport_pdf </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Popup_rapport_pdf(parent : JFrame, title : String, modal : boolean) </td></tr>
<tr><td align="left" balign="left"> - initComponent() </td></tr>
<tr><td align="left" balign="left"> - remplir_combobox() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_supprimer
	c13 [label=<<table title="controleur.bouton_supprimer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_supprimer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> ~ IDselection : String </td></tr>
<tr><td align="left" balign="left"> ~ NomSelection : String </td></tr>
<tr><td align="left" balign="left"> ~ nombre_actions : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_supprimer() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// controleur.bouton_vendre
	c14 [label=<<table title="controleur.bouton_vendre" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> bouton_vendre </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> ~ nombre_actions_a_vendre : String </td></tr>
<tr><td align="left" balign="left"> ~ nombre_actions_a_vendre_int : int </td></tr>
<tr><td align="left" balign="left"> ~ nombre_action_a_verif : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + bouton_vendre() </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(e : ActionEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.API_YahooFinance
	c15 [label=<<table title="modele.API_YahooFinance" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> API_YahooFinance </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + API_YahooFinance() </td></tr>
<tr><td align="left" balign="left"> + recuperernom(identreprise : String) : String </td></tr>
<tr><td align="left" balign="left"> + recupererhistorique(identreprise : String) : ArrayList&lt;Double&gt; </td></tr>
<tr><td align="left" balign="left"> + valeuraction(identreprise : String) : Double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Combobox_listeentreprises
	c16 [label=<<table title="modele.Combobox_listeentreprises" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Combobox_listeentreprises </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ cn : Connection </td></tr>
<tr><td align="left" balign="left"> ~ st : Statement </td></tr>
<tr><td align="left" balign="left"> ~ rs : ResultSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Combobox_listeentreprises() </td></tr>
<tr><td align="left" balign="left"> + remplir_combobox() : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Formatage_Date
	c17 [label=<<table title="modele.Formatage_Date" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Formatage_Date </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Formatage_Date() </td></tr>
<tr><td align="left" balign="left"> + mettredateenformepourstockage(date : Date) : String </td></tr>
<tr><td align="left" balign="left"> + mettre_en_forme_date(date : String) : String </td></tr>
<tr><td align="left" balign="left"> + recuperer_heure(date : String) : int </td></tr>
<tr><td align="left" balign="left"> + recuperer_minutes(date : String) : int </td></tr>
<tr><td align="left" balign="left"> + recuperer_secondes(date : String) : int </td></tr>
<tr><td align="left" balign="left"> + recuperer_jour(date : String) : int </td></tr>
<tr><td align="left" balign="left"> + recuperer_mois(date : String) : int </td></tr>
<tr><td align="left" balign="left"> + recuperer_annee(date : String) : int </td></tr>
<tr><td align="left" balign="left"> + recupererles30derniersjours(date : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + recuperer7derniersjours(date : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + recuperer24dernieresheures(date : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + date_avant_datedepart(date : String, date_depart : String) : Boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Gestion_Entreprises_Interdites_achat
	c18 [label=<<table title="modele.Gestion_Entreprises_Interdites_achat" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Gestion_Entreprises_Interdites_achat </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Gestion_Entreprises_Interdites_achat() </td></tr>
<tr><td align="left" balign="left"> + stockerentreprise(entreprise : String) </td></tr>
<tr><td align="left" balign="left"> + supprimerentreprise(entreprise : String) </td></tr>
<tr><td align="left" balign="left"> + verifier_entreprise(entreprise : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + prevenir_bob_des_entreprises_a_risque() : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Gestion_TableauEmployesBob
	c19 [label=<<table title="modele.Gestion_TableauEmployesBob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Gestion_TableauEmployesBob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
<tr><td align="left" balign="left"> ~ liste_employes : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Gestion_TableauEmployesBob() </td></tr>
<tr><td align="left" balign="left"> + remplir_JTable_Bob() : List&lt;TableauEmployesBob&gt; </td></tr>
<tr><td align="left" balign="left"> + remplirbdd() </td></tr>
<tr><td align="left" balign="left"> + recuperer_employes() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + recuperer_valeurportefeuille(employe : String) : double </td></tr>
<tr><td align="left" balign="left"> + recuperer_gain_hebdomadaire(employe : String) : double </td></tr>
<tr><td align="left" balign="left"> + floor(a : double, n : int) : double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Gestion_Tableau_Activite_Entreprises
	c20 [label=<<table title="modele.Gestion_Tableau_Activite_Entreprises" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Gestion_Tableau_Activite_Entreprises </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
<tr><td align="left" balign="left"> ~ valeur_action : double </td></tr>
<tr><td align="left" balign="left"> + liste_users : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - liste_users_avec_alerte : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Gestion_Tableau_Activite_Entreprises() </td></tr>
<tr><td align="left" balign="left"> + rafraichir_tableau() </td></tr>
<tr><td align="left" balign="left"> + afficher_pour_utilisateurs(entreprise : String) </td></tr>
<tr><td align="left" balign="left"> + afficher_entreprise_a_risque(entreprise : String, utilisateur : String) </td></tr>
<tr><td align="left" balign="left"> + afficher_alertes(entreprise : String, utilisateur : String) </td></tr>
<tr><td align="left" balign="left"> + afficher_vente_entreprise(entreprise : String, utilisateur : String) </td></tr>
<tr><td align="left" balign="left"> + afficher_achat_entreprise(entreprise : String, utilisateur : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Gestion_achatvente_automatique
	c21 [label=<<table title="modele.Gestion_achatvente_automatique" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Gestion_achatvente_automatique </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Gestion_achatvente_automatique() </td></tr>
<tr><td align="left" balign="left"> + stockerachatventeautomatique(entreprise : String, type : String, type2 : String, valeur_limite : int, nombreactions : int) </td></tr>
<tr><td align="left" balign="left"> + recupererachatventeautomatique() </td></tr>
<tr><td align="left" balign="left"> + stopper_achatvente_automatique(entreprise : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Gestion_alertes
	c22 [label=<<table title="modele.Gestion_alertes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Gestion_alertes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ achat : double </td></tr>
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Gestion_alertes() </td></tr>
<tr><td align="left" balign="left"> + enregistreralerte(entreprise : String, valeur_alerte : int, Date : String) </td></tr>
<tr><td align="left" balign="left"> + supprimeralerte(entreprise : String) </td></tr>
<tr><td align="left" balign="left"> + verifier_si_alerte_sur_entreprise(entreprise : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + colorierlignesalerte() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Gestion_base_de_donnee
	c23 [label=<<table title="modele.Gestion_base_de_donnee" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Gestion_base_de_donnee </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ achat : double </td></tr>
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Gestion_base_de_donnee() </td></tr>
<tr><td align="left" balign="left"> + sauverlignedansBase(Entreprise : String, ID : String, nb_actions : int, valeur_action : Double, total : Double, username : String) </td></tr>
<tr><td align="left" balign="left"> + supprimerlignedelabase(ID : String) </td></tr>
<tr><td align="left" balign="left"> + recupererBase(username : String) </td></tr>
<tr><td align="left" balign="left"> + Achat(ID_achat : String, nombre_action : int) </td></tr>
<tr><td align="left" balign="left"> + Vente(ID_vente : String, nombre_action : int) </td></tr>
<tr><td align="left" balign="left"> + stockertotaldansbase(date : String, totalportefeuille : double) </td></tr>
<tr><td align="left" balign="left"> + recuperertotauxdujour() </td></tr>
<tr><td align="left" balign="left"> + recuperertotaux() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Gestion_entreprises_a_risque
	c24 [label=<<table title="modele.Gestion_entreprises_a_risque" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Gestion_entreprises_a_risque </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ cn : Connection </td></tr>
<tr><td align="left" balign="left"> ~ st : Statement </td></tr>
<tr><td align="left" balign="left"> ~ rs : ResultSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Gestion_entreprises_a_risque() </td></tr>
<tr><td align="left" balign="left"> + enregistrer_entreprise_a_risque(entreprise : String) </td></tr>
<tr><td align="left" balign="left"> + verifier_si_alerte_sur_entreprise(entreprise : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + verifier_alerte_sur_ligne(entreprises : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + supprimer_entreprise_a_risque(entreprise : String) </td></tr>
<tr><td align="left" balign="left"> + recuperer_entreprise_a_risque() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.ModeleDynamiqueObjet
	c25 [label=<<table title="modele.ModeleDynamiqueObjet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModeleDynamiqueObjet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> + Portefeuille : ArrayList&lt;Portefeuille&gt; </td></tr>
<tr><td align="left" balign="left"> - entetes : String[] </td></tr>
<tr><td align="left" balign="left"> - liste_resume_achatvente : ArrayList&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + timer : Timer_rafraichissement </td></tr>
<tr><td align="left" balign="left"> ~ calendar : Calendar </td></tr>
<tr><td align="left" balign="left"> ~ date : Date </td></tr>
<tr><td align="left" balign="left"> + row_a_colorier : ArrayList&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + entreprise_color : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + ligne_a_risque : ArrayList&lt;Integer&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModeleDynamiqueObjet() </td></tr>
<tr><td align="left" balign="left"> + getRowCount() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnCount() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnName(columnIndex : int) : String </td></tr>
<tr><td align="left" balign="left"> + addLigne(value : Portefeuille) </td></tr>
<tr><td align="left" balign="left"> + getColumnClass(column : int) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + remplirarraylistavecentreprisesdutableau(arraylist : ArrayList&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + remplirarraylistavecIDdutableau(arraylist : ArrayList&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + recupererIDavecnomentreprise(nomentreprise : String) : String </td></tr>
<tr><td align="left" balign="left"> + recuperernomavecIDentreprise(IDentreprise : String) : String </td></tr>
<tr><td align="left" balign="left"> + mettretotalportefeuilledanslabel() </td></tr>
<tr><td align="left" balign="left"> + rafraichirtotalportefeuille() </td></tr>
<tr><td align="left" balign="left"> + calcultotalportefeuille() : double </td></tr>
<tr><td align="left" balign="left"> + floor(a : double, n : int) : double </td></tr>
<tr><td align="left" balign="left"> + removePortefeuille(rowIndex : int) </td></tr>
<tr><td align="left" balign="left"> + updatehistoriqueachatvente(resume : String) </td></tr>
<tr><td align="left" balign="left"> + getValueAt(rowIndex : int, columnIndex : int) : Object </td></tr>
<tr><td align="left" balign="left"> + setValueAt(value : Object, rowIndex : int, columnIndex : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.ModeleTableauEmployesBob
	c26 [label=<<table title="modele.ModeleTableauEmployesBob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModeleTableauEmployesBob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - columnNames : String[] </td></tr>
<tr><td align="left" balign="left"> - listEmployees : List&lt;TableauEmployesBob&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModeleTableauEmployesBob(listEmployees : List&lt;TableauEmployesBob&gt;) </td></tr>
<tr><td align="left" balign="left"> + getColumnCount() : int </td></tr>
<tr><td align="left" balign="left"> + getRowCount() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnName(columnIndex : int) : String </td></tr>
<tr><td align="left" balign="left"> + getColumnClass(columnIndex : int) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getValueAt(rowIndex : int, columnIndex : int) : Object </td></tr>
<tr><td align="left" balign="left"> + setValueAt(value : Object, rowIndex : int, columnIndex : int) </td></tr>
<tr><td align="left" balign="left"> + MettreTriEnPlace(table : JTable) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Modele_Tableau_Activite_Entreprises
	c27 [label=<<table title="modele.Modele_Tableau_Activite_Entreprises" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Modele_Tableau_Activite_Entreprises </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> + Activite_Entreprise : ArrayList&lt;Tableau_Activite_Entreprise&gt; </td></tr>
<tr><td align="left" balign="left"> - entetes : String[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Modele_Tableau_Activite_Entreprises() </td></tr>
<tr><td align="left" balign="left"> + getRowCount() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnCount() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnName(columnIndex : int) : String </td></tr>
<tr><td align="left" balign="left"> + addLigne(value : Tableau_Activite_Entreprise) </td></tr>
<tr><td align="left" balign="left"> + getColumnClass(column : int) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + floor(a : double, n : int) : double </td></tr>
<tr><td align="left" balign="left"> + removePortefeuille(rowIndex : int) </td></tr>
<tr><td align="left" balign="left"> + isCellEditable(row : int, col : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + getValueAt(rowIndex : int, columnIndex : int) : Object </td></tr>
<tr><td align="left" balign="left"> + setValueAt(value : Object, rowIndex : int, columnIndex : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Portefeuille
	c28 [label=<<table title="modele.Portefeuille" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Portefeuille </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - nom : String </td></tr>
<tr><td align="left" balign="left"> - ID : String </td></tr>
<tr><td align="left" balign="left"> - nombre_actions : int </td></tr>
<tr><td align="left" balign="left"> - valeur_action : String </td></tr>
<tr><td align="left" balign="left"> - Total : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Portefeuille(nom : String, ID : String, nombre_actions : int, valeur_action : String, Total : String, image : Object, image2 : Object) </td></tr>
<tr><td align="left" balign="left"> + getNombre_actions() : int </td></tr>
<tr><td align="left" balign="left"> + setNombre_actions(nombre_actions : int) </td></tr>
<tr><td align="left" balign="left"> + getValeur_action() : String </td></tr>
<tr><td align="left" balign="left"> + setValeur_action(valeur_action : String) </td></tr>
<tr><td align="left" balign="left"> + getTotal() : String </td></tr>
<tr><td align="left" balign="left"> + setTotal(Total : String) </td></tr>
<tr><td align="left" balign="left"> + getNom() : String </td></tr>
<tr><td align="left" balign="left"> + setNom(nom : String) </td></tr>
<tr><td align="left" balign="left"> + getnombre_actions() : int </td></tr>
<tr><td align="left" balign="left"> + setnombre_actions(value : int) </td></tr>
<tr><td align="left" balign="left"> + getID() : String </td></tr>
<tr><td align="left" balign="left"> + setID(ID : String) </td></tr>
<tr><td align="left" balign="left"> + getvaleur_action() : String </td></tr>
<tr><td align="left" balign="left"> + setvaleur_action(valeur_action : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Rapport_PDF
	c29 [label=<<table title="modele.Rapport_PDF" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Rapport_PDF </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - FILE : String </td></tr>
<tr><td align="left" balign="left"> - Font_Titre : Font </td></tr>
<tr><td align="left" balign="left"> - Font_Sous_Titre : Font </td></tr>
<tr><td align="left" balign="left"> - Font_Header : Font </td></tr>
<tr><td align="left" balign="left"> - redFont : Font </td></tr>
<tr><td align="left" balign="left"> - subFont : Font </td></tr>
<tr><td align="left" balign="left"> - smallBold : Font </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Rapport_PDF() </td></tr>
<tr><td align="left" balign="left"> + addMetaData(document : Document) </td></tr>
<tr><td align="left" balign="left"> + addTitlePage(document : Document) </td></tr>
<tr><td align="left" balign="left"> + addContent(document : Document, date_depart : String) </td></tr>
<tr><td align="left" balign="left"> - createList(subCatPart : Section) </td></tr>
<tr><td align="left" balign="left"> + addEmptyLine(paragraph : Paragraph, number : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Recuperer_infos_rapport_pdf
	c30 [label=<<table title="modele.Recuperer_infos_rapport_pdf" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Recuperer_infos_rapport_pdf </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
<tr><td align="left" balign="left"> - st : Statement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Recuperer_infos_rapport_pdf() </td></tr>
<tr><td align="left" balign="left"> + recupererdate(jour : String, mois : String, annee : int) : String </td></tr>
<tr><td align="left" balign="left"> + informations_par_utilisateurs(date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_alertes(utilisateur : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_entreprises_a_risque(utilisateur : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_ventes(utilisateur : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_achats(utilisateur : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> + informations_par_entreprise(date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_alertes_par_entreprise(entreprise : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_entreprises_a_risque_par_entreprise(entreprise : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_ventes_par_entreprise(entreprise : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> - recuperer_achats_par_entreprise(entreprise : String, date_depart : String) : Paragraph </td></tr>
<tr><td align="left" balign="left"> + liste_entreprises() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + liste_utilisateurs() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + floor(a : double, n : int) : double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.SQLiteJDBC
	c31 [label=<<table title="modele.SQLiteJDBC" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SQLiteJDBC </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SQLiteJDBC() </td></tr>
<tr><td align="left" balign="left"> + connexionbddSQLITE() : Statement </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.TableauEmployesBob
	c32 [label=<<table title="modele.TableauEmployesBob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TableauEmployesBob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - index : int </td></tr>
<tr><td align="left" balign="left"> - employes : String </td></tr>
<tr><td align="left" balign="left"> - gain : double </td></tr>
<tr><td align="left" balign="left"> - valeur_portefeuille : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TableauEmployesBob(employes : String, gain : double, valeur_portefeuille : String) </td></tr>
<tr><td align="left" balign="left"> + getIndex() : int </td></tr>
<tr><td align="left" balign="left"> + setIndex(index : int) </td></tr>
<tr><td align="left" balign="left"> + getEmployes() : String </td></tr>
<tr><td align="left" balign="left"> + setEmployes(employes : String) </td></tr>
<tr><td align="left" balign="left"> + getGain() : double </td></tr>
<tr><td align="left" balign="left"> + setGain(gain : double) </td></tr>
<tr><td align="left" balign="left"> + getValeur_portefeuille() : String </td></tr>
<tr><td align="left" balign="left"> + setValeur_portefeuille(valeur_portefeuille : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Tableau_Activite_Entreprise
	c33 [label=<<table title="modele.Tableau_Activite_Entreprise" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Tableau_Activite_Entreprise </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - activite : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Tableau_Activite_Entreprise(activite : String, bouton : JButton) </td></tr>
<tr><td align="left" balign="left"> + getActivite() : String </td></tr>
<tr><td align="left" balign="left"> + setActivite(activite : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.Timer_rafraichissement
	c34 [label=<<table title="modele.Timer_rafraichissement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Timer_rafraichissement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ ligne_a_colorier : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Timer_rafraichissement() </td></tr>
<tr><td align="left" balign="left"> + createTimer() : Timer </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.jcomboboxachatvente
	c35 [label=<<table title="modele.jcomboboxachatvente" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> jcomboboxachatvente </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> ~ IDcorrespondantcomboboxachatvente : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + jcomboboxachatvente() </td></tr>
<tr><td align="left" balign="left"> + remplir() </td></tr>
<tr><td align="left" balign="left"> + supprimerentreprise(ID : String) </td></tr>
<tr><td align="left" balign="left"> + supprimerentreprisedetabeaucomboboxachatvente(ID : String) </td></tr>
<tr><td align="left" balign="left"> + remplirtableauachatvente(type_transaction : String, nom : String, ID : String, nombre_actions : int, user : String, Date : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.jcomboboxajout
	c36 [label=<<table title="modele.jcomboboxajout" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> jcomboboxajout </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ cn : Connection </td></tr>
<tr><td align="left" balign="left"> ~ st : Statement </td></tr>
<tr><td align="left" balign="left"> ~ rs : ResultSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + jcomboboxajout() </td></tr>
<tr><td align="left" balign="left"> + recupererlisteIDajout() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + recupererlisteentrepriseajouter() : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// modele.limite_investissement
	c37 [label=<<table title="modele.limite_investissement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> limite_investissement </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
<tr><td align="left" balign="left"> - limite_investissement_bdd : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + limite_investissement() </td></tr>
<tr><td align="left" balign="left"> + recupererlimiteinvestissement() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.BoutonRenderer
	c38 [label=<<table title="vue.BoutonRenderer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BoutonRenderer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ lignes_boutons_alerte : ArrayList&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> ~ listener : ButtonEditor.ButtonListener </td></tr>
<tr><td align="left" balign="left"> ~ text : String </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BoutonRenderer() </td></tr>
<tr><td align="left" balign="left"> + getTableCellRendererComponent(table : JTable, value : Object, isSelected : boolean, hasFocus : boolean, row : int, column : int) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.ButtonEditor
	c39 [label=<<table title="vue.ButtonEditor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ButtonEditor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> # button : JButton </td></tr>
<tr><td align="left" balign="left"> - bListener : ButtonEditor.ButtonListener </td></tr>
<tr><td align="left" balign="left"> + texte_bouton : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ButtonEditor(checkBox : JCheckBox) </td></tr>
<tr><td align="left" balign="left"> + getTableCellEditorComponent(table : JTable, value : Object, isSelected : boolean, row : int, column : int) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.ButtonEditor.ButtonListener
	c40 [label=<<table title="vue.ButtonEditor.ButtonListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ButtonListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ ButtonListener() </td></tr>
<tr><td align="left" balign="left"> + setColumn(col : int) </td></tr>
<tr><td align="left" balign="left"> + setRow(row : int) </td></tr>
<tr><td align="left" balign="left"> + setTable(table : JTable) </td></tr>
<tr><td align="left" balign="left"> + actionPerformed(event : ActionEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.IconRenderer
	c41 [label=<<table title="vue.IconRenderer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IconRenderer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - icone : ImageIcon </td></tr>
<tr><td align="left" balign="left"> - iconeinterdit : ImageIcon </td></tr>
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IconRenderer() </td></tr>
<tr><td align="left" balign="left"> + getTableCellRendererComponent(table : JTable, value : Object, isSelected : boolean, hasFocus : boolean, row : int, column : int) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Interface_JavaFX_Swing
	c42 [label=<<table title="vue.Interface_JavaFX_Swing" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Interface_JavaFX_Swing </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - jfxPanel : JFXPanel </td></tr>
<tr><td align="left" balign="left"> - engine : WebEngine </td></tr>
<tr><td align="left" balign="left"> ~ panelconnexion : Panel_connexion </td></tr>
<tr><td align="left" balign="left"> - panelswing : JPanel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Interface_JavaFX_Swing() </td></tr>
<tr><td align="left" balign="left"> - initComponents() </td></tr>
<tr><td align="left" balign="left"> - createScene() </td></tr>
<tr><td align="left" balign="left"> + loadURL(url : String) </td></tr>
<tr><td align="left" balign="left"> - toURL(str : String) : String </td></tr>
<tr><td align="left" balign="left"> + construire_interface_alice() </td></tr>
<tr><td align="left" balign="left"> + construire_interface_bob() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Jpopupmenu
	c43 [label=<<table title="vue.Jpopupmenu" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Jpopupmenu </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - item_entreprise_a_risque : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - item_poser_alerte : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - item_enlever_alerte : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - item_enlever_signalement_risque : JMenuItem </td></tr>
<tr><td align="left" balign="left"> - entreprise_selectionnee : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Jpopupmenu() </td></tr>
<tr><td align="left" balign="left"> + removecomp(item : JMenuItem) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Panel_connexion
	c44 [label=<<table title="vue.Panel_connexion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Panel_connexion </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - Panel_connexion : JPanel </td></tr>
<tr><td align="left" balign="left"> - Panel_gauche_connexion : JPanel </td></tr>
<tr><td align="left" balign="left"> - Panel_titre_connexion : JPanel </td></tr>
<tr><td align="left" balign="left"> - Panel_web_connexion : JPanel </td></tr>
<tr><td align="left" balign="left"> + bouton_connexion : JButton </td></tr>
<tr><td align="left" balign="left"> + bouton_inscription : JButton </td></tr>
<tr><td align="left" balign="left"> - jLabel1 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jLabel2 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jLabel3 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jLabel4 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jPanel1 : JPanel </td></tr>
<tr><td align="left" balign="left"> - label_motdepasse_connexion : JLabel </td></tr>
<tr><td align="left" balign="left"> - label_utilisateur_connexion : JLabel </td></tr>
<tr><td align="left" balign="left"> + textfield_motdepasse_connexion : JPasswordField </td></tr>
<tr><td align="left" balign="left"> + textfield_motdepasse_inscription : JPasswordField </td></tr>
<tr><td align="left" balign="left"> + textfield_username_inscription : JTextField </td></tr>
<tr><td align="left" balign="left"> + textfield_utilisateur_connexion : JTextField </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Panel_connexion() </td></tr>
<tr><td align="left" balign="left"> - initComponents() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Panel_interface
	c45 [label=<<table title="vue.Panel_interface" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Panel_interface </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> + modelelistehistorique : DefaultListModel&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> ~ Label_user : JLabel </td></tr>
<tr><td align="left" balign="left"> ~ Panneau_Graphique_historique : JTabbedPane </td></tr>
<tr><td align="left" balign="left"> - Titre_achatvente : JLabel </td></tr>
<tr><td align="left" balign="left"> + bouton_acheter : JButton </td></tr>
<tr><td align="left" balign="left"> - bouton_ajouter : JButton </td></tr>
<tr><td align="left" balign="left"> - bouton_rafraichir : JButton </td></tr>
<tr><td align="left" balign="left"> - bouton_supprimer : JButton </td></tr>
<tr><td align="left" balign="left"> ~ bouton_vendre : JButton </td></tr>
<tr><td align="left" balign="left"> + label_quantite_achatvente : JLabel </td></tr>
<tr><td align="left" balign="left"> + Champ_achat_vente : JTextField </td></tr>
<tr><td align="left" balign="left"> + combo_box_achat_vente : JComboBox&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + label_entreprise_achatvente : JLabel </td></tr>
<tr><td align="left" balign="left"> + label_total_portefeuille : JLabel </td></tr>
<tr><td align="left" balign="left"> + ScrollPane_historique : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - panel_haut : JPanel </td></tr>
<tr><td align="left" balign="left"> + tableau : JTable </td></tr>
<tr><td align="left" balign="left"> + modele : ModeleDynamiqueObjet </td></tr>
<tr><td align="left" balign="left"> + nb_actions : int </td></tr>
<tr><td align="left" balign="left"> + Liste_entreprise_combo_box_achat_vente : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + Liste_choix_ID_achat_vente : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> ~ Panelbas : JPanel </td></tr>
<tr><td align="left" balign="left"> ~ Panelbasscroll : JScrollPane </td></tr>
<tr><td align="left" balign="left"> + labeltotalachatvente : JLabel </td></tr>
<tr><td align="left" balign="left"> + modelecombobox : DefaultComboBoxModel&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> - jPanelachatvente : JPanel </td></tr>
<tr><td align="left" balign="left"> - JPaneltableau : JPanel </td></tr>
<tr><td align="left" balign="left"> ~ scrollpanebas : JScrollPane </td></tr>
<tr><td align="left" balign="left"> ~ bouton_alerte_entreprise : JButton </td></tr>
<tr><td align="left" balign="left"> + totalportefeuille : double </td></tr>
<tr><td align="left" balign="left"> + totalportefeuilleaffiche : double </td></tr>
<tr><td align="left" balign="left"> ~ liste_historique : JList&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> ~ totaldisponiblepourtransactions : double </td></tr>
<tr><td align="left" balign="left"> ~ Label_totaldispopourinvestissement : JLabel </td></tr>
<tr><td align="left" balign="left"> ~ jLabel1 : JLabel </td></tr>
<tr><td align="left" balign="left"> ~ bouton_fixer_limite_investissement : JButton </td></tr>
<tr><td align="left" balign="left"> + bouton_achat_automatique : JButton </td></tr>
<tr><td align="left" balign="left"> - GrandPanelbas : JPanel </td></tr>
<tr><td align="left" balign="left"> - Panel_connexion : JPanel </td></tr>
<tr><td align="left" balign="left"> + bouton_deconnexion : JButton </td></tr>
<tr><td align="left" balign="left"> - bouton_inscription : JButton </td></tr>
<tr><td align="left" balign="left"> - label_motdepasse_connexion : JLabel </td></tr>
<tr><td align="left" balign="left"> - label_utilisateur_connexion : JLabel </td></tr>
<tr><td align="left" balign="left"> + label_limite_investissement : JLabel </td></tr>
<tr><td align="left" balign="left"> + textfield_limite_investissement : JTextField </td></tr>
<tr><td align="left" balign="left"> - textfield_motdepasse_connexion : JTextField </td></tr>
<tr><td align="left" balign="left"> - textfield_utilisateur_connexion : JTextField </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Panel_interface() </td></tr>
<tr><td align="left" balign="left"> - initComponents() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Panel_interface_bob
	c46 [label=<<table title="vue.Panel_interface_bob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Panel_interface_bob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> + listEmployees : List&lt;TableauEmployesBob&gt; </td></tr>
<tr><td align="left" balign="left"> + modele_tableau_employes_bob : TableModel </td></tr>
<tr><td align="left" balign="left"> + modele_tableau_activite_entreprise : Modele_Tableau_Activite_Entreprises </td></tr>
<tr><td align="left" balign="left"> - Panel_tableau_activite_entreprise : JPanel </td></tr>
<tr><td align="left" balign="left"> - Panel_tableau_employes : JPanel </td></tr>
<tr><td align="left" balign="left"> + Tableau_Activite_Entreprises : JTable </td></tr>
<tr><td align="left" balign="left"> ~ Tableau_Employes_Bob : JTable </td></tr>
<tr><td align="left" balign="left"> ~ bouton_deconnexion : JButton </td></tr>
<tr><td align="left" balign="left"> + bouton_interdire_achat : JButton </td></tr>
<tr><td align="left" balign="left"> ~ bouton_rapportPDF : JButton </td></tr>
<tr><td align="left" balign="left"> + combobox_entreprises : JComboBox&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> ~ jLabel1 : JLabel </td></tr>
<tr><td align="left" balign="left"> ~ jLabel2 : JLabel </td></tr>
<tr><td align="left" balign="left"> - panel_haut : JPanel </td></tr>
<tr><td align="left" balign="left"> - scrollpane_tableau_activite_entreprise : JScrollPane </td></tr>
<tr><td align="left" balign="left"> - scrollpane_tableau_employes : JScrollPane </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Panel_interface_bob() </td></tr>
<tr><td align="left" balign="left"> - initComponents() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Popup_Pousser_Alerte
	c47 [label=<<table title="vue.Popup_Pousser_Alerte" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Popup_Pousser_Alerte </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - st : Statement </td></tr>
<tr><td align="left" balign="left"> - rs : ResultSet </td></tr>
<tr><td align="left" balign="left"> ~ model : DefaultListModel&lt;JCheckBox&gt; </td></tr>
<tr><td align="left" balign="left"> ~ checkBoxList : Popup_Pousser_Alerte.JCheckBoxList </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Popup_Pousser_Alerte(parent : JFrame, title : String, modal : boolean) </td></tr>
<tr><td align="left" balign="left"> - initComponent() </td></tr>
<tr><td align="left" balign="left"> - recuperer_utilisateurs_cochees() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - generer_liste_combobox() </td></tr>
<tr><td align="left" balign="left"> - recuperer_utilisateur_bouton(entreprise : String) : String </td></tr>
<tr><td align="left" balign="left"> - recuperer_valeur_alerte(entreprise : String) : int </td></tr>
<tr><td align="left" balign="left"> - recuperer_users_avec_alerte(entreprise : String) : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - pousser_alerte(employe : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Popup_Pousser_Alerte.JCheckBoxList
	c48 [label=<<table title="vue.Popup_Pousser_Alerte.JCheckBoxList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JCheckBoxList </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # noFocusBorder : Border </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JCheckBoxList() </td></tr>
<tr><td align="left" balign="left"> + JCheckBoxList(model : ListModel&lt;JCheckBox&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Popup_Pousser_Alerte.JCheckBoxList.CellRenderer
	c49 [label=<<table title="vue.Popup_Pousser_Alerte.JCheckBoxList.CellRenderer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CellRenderer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ CellRenderer() </td></tr>
<tr><td align="left" balign="left"> + getListCellRendererComponent(list : JList&lt;?&gt;, value : JCheckBox, index : int, isSelected : boolean, cellHasFocus : boolean) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Popup_achatventeautomatique
	c50 [label=<<table title="vue.Popup_achatventeautomatique" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Popup_achatventeautomatique </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + combobox_achatvente_automatique : JComboBox&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> - jButton1 : JButton </td></tr>
<tr><td align="left" balign="left"> - jButton2 : JButton </td></tr>
<tr><td align="left" balign="left"> - jLabel1 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jLabel2 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jLabel3 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jLabel4 : JLabel </td></tr>
<tr><td align="left" balign="left"> - jLabel5 : JLabel </td></tr>
<tr><td align="left" balign="left"> + radiobouton_achat : JRadioButton </td></tr>
<tr><td align="left" balign="left"> + radiobouton_audessus : JRadioButton </td></tr>
<tr><td align="left" balign="left"> + radiobouton_endessous : JRadioButton </td></tr>
<tr><td align="left" balign="left"> + radiobouton_vente : JRadioButton </td></tr>
<tr><td align="left" balign="left"> + spinner_nombreaction : JSpinner </td></tr>
<tr><td align="left" balign="left"> + spinner_valeur_achatvente_auto : JSpinner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Popup_achatventeautomatique() </td></tr>
<tr><td align="left" balign="left"> - initComponents() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Popup_alertes
	c51 [label=<<table title="vue.Popup_alertes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Popup_alertes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - spinner : JSpinner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Popup_alertes(parent : JFrame, title : String, modal : boolean) </td></tr>
<tr><td align="left" balign="left"> - initComponent() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Popup_avertissement_entreprises_interdites
	c52 [label=<<table title="vue.Popup_avertissement_entreprises_interdites" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Popup_avertissement_entreprises_interdites </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - model : DefaultListModel&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - liste1 : JList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - liste_entreprises : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Popup_avertissement_entreprises_interdites(parent : JFrame, title : String, modal : boolean) </td></tr>
<tr><td align="left" balign="left"> - initComponent() </td></tr>
<tr><td align="left" balign="left"> - generer_liste() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Popup_rapport_pdf
	c53 [label=<<table title="vue.Popup_rapport_pdf" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Popup_rapport_pdf </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - liste_jours : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - liste_mois : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> - liste_annees : ArrayList&lt;Integer&gt; </td></tr>
<tr><td align="left" balign="left"> + checkbox_tri_user : JRadioButton </td></tr>
<tr><td align="left" balign="left"> + checkbox_tri_entreprise : JRadioButton </td></tr>
<tr><td align="left" balign="left"> + date_depart : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Popup_rapport_pdf(parent : JFrame, title : String, modal : boolean) </td></tr>
<tr><td align="left" balign="left"> - initComponent() </td></tr>
<tr><td align="left" balign="left"> + remplir_combobox() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.Renderer_combobox_ajout
	c54 [label=<<table title="vue.Renderer_combobox_ajout" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Renderer_combobox_ajout </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # defaultRenderer : DefaultListCellRenderer </td></tr>
<tr><td align="left" balign="left"> ~ icone : ImageIcon </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Renderer_combobox_ajout() </td></tr>
<tr><td align="left" balign="left"> + getListCellRendererComponent(list : JList&lt;&gt;, value : Object, index : int, isSelected : boolean, cellHasFocus : boolean) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.TableMouseListener
	c55 [label=<<table title="vue.TableMouseListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TableMouseListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - table : JTable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TableMouseListener(table : JTable) </td></tr>
<tr><td align="left" balign="left"> + mousePressed(event : MouseEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.TableRenderer
	c56 [label=<<table title="vue.TableRenderer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TableRenderer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TableRenderer() </td></tr>
<tr><td align="left" balign="left"> + getTableCellRendererComponent(table : JTable, value : Object, isSelected : boolean, hasFocus : boolean, row : int, column : int) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.TableRendererBob
	c57 [label=<<table title="vue.TableRendererBob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TableRendererBob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TableRendererBob() </td></tr>
<tr><td align="left" balign="left"> + getTableCellRendererComponent(table : JTable, value : Object, isSelected : boolean, hasFocus : boolean, row : int, column : int) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// vue.TableRenderer_activiteentreprises_bob
	c58 [label=<<table title="vue.TableRenderer_activiteentreprises_bob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TableRenderer_activiteentreprises_bob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TableRenderer_activiteentreprises_bob() </td></tr>
<tr><td align="left" balign="left"> + getTableCellRendererComponent(table : JTable, value : Object, isSelected : boolean, hasFocus : boolean, row : int, column : int) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//Application_Main extends javax.swing.JApplet
	c59:p -> c0:p [dir=back,arrowtail=empty];
	//controleur.Graphique_journalier_totalportefeuille extends ApplicationFrame
	c60:p -> c1:p [dir=back,arrowtail=empty];
	//controleur.Graphique_mensuel_totalportefeuille extends ApplicationFrame
	c60:p -> c2:p [dir=back,arrowtail=empty];
	//controleur.bouton_achatvente_automatique extends javax.swing.JDialog
	c61:p -> c3:p [dir=back,arrowtail=empty];
	//controleur.bouton_acheter extends javax.swing.AbstractAction
	c62:p -> c4:p [dir=back,arrowtail=empty];
	//controleur.bouton_ajouter extends javax.swing.JDialog
	c61:p -> c5:p [dir=back,arrowtail=empty];
	//controleur.bouton_inscription extends javax.swing.AbstractAction
	c62:p -> c7:p [dir=back,arrowtail=empty];
	//controleur.bouton_interdire_achat extends javax.swing.AbstractAction
	c62:p -> c8:p [dir=back,arrowtail=empty];
	//controleur.bouton_limite_investissement extends javax.swing.AbstractAction
	c62:p -> c9:p [dir=back,arrowtail=empty];
	//controleur.bouton_rafraichir extends javax.swing.AbstractAction
	c62:p -> c10:p [dir=back,arrowtail=empty];
	//controleur.bouton_rapportpdf extends javax.swing.AbstractAction
	c62:p -> c11:p [dir=back,arrowtail=empty];
	//controleur.bouton_rapportpdf.Popup_rapport_pdf extends javax.swing.JDialog
	c61:p -> c12:p [dir=back,arrowtail=empty];
	//controleur.bouton_supprimer extends javax.swing.AbstractAction
	c62:p -> c13:p [dir=back,arrowtail=empty];
	//controleur.bouton_vendre extends javax.swing.AbstractAction
	c62:p -> c14:p [dir=back,arrowtail=empty];
	//modele.ModeleDynamiqueObjet extends javax.swing.table.AbstractTableModel
	c63:p -> c25:p [dir=back,arrowtail=empty];
	//modele.ModeleTableauEmployesBob extends javax.swing.table.AbstractTableModel
	c63:p -> c26:p [dir=back,arrowtail=empty];
	//modele.Modele_Tableau_Activite_Entreprises extends javax.swing.table.AbstractTableModel
	c63:p -> c27:p [dir=back,arrowtail=empty];
	//vue.BoutonRenderer extends javax.swing.JButton
	c64:p -> c38:p [dir=back,arrowtail=empty];
	//vue.BoutonRenderer implements javax.swing.table.TableCellRenderer
	c65:p -> c38:p [dir=back,arrowtail=empty,style=dashed];
	//vue.ButtonEditor extends javax.swing.DefaultCellEditor
	c66:p -> c39:p [dir=back,arrowtail=empty];
	//vue.ButtonEditor.ButtonListener implements java.awt.event.ActionListener
	c67:p -> c40:p [dir=back,arrowtail=empty,style=dashed];
	//vue.IconRenderer extends javax.swing.table.DefaultTableCellRenderer
	c68:p -> c41:p [dir=back,arrowtail=empty];
	//vue.Interface_JavaFX_Swing extends javax.swing.JFrame
	c69:p -> c42:p [dir=back,arrowtail=empty];
	//vue.Jpopupmenu extends javax.swing.JPopupMenu
	c70:p -> c43:p [dir=back,arrowtail=empty];
	//vue.Panel_connexion extends javax.swing.JPanel
	c71:p -> c44:p [dir=back,arrowtail=empty];
	//vue.Panel_interface extends javax.swing.JPanel
	c71:p -> c45:p [dir=back,arrowtail=empty];
	//vue.Panel_interface_bob extends javax.swing.JPanel
	c71:p -> c46:p [dir=back,arrowtail=empty];
	//vue.Popup_Pousser_Alerte extends javax.swing.JDialog
	c61:p -> c47:p [dir=back,arrowtail=empty];
	//vue.Popup_Pousser_Alerte.JCheckBoxList extends javax.swing.JList<javax.swing.JCheckBox>
	c72:p -> c48:p [dir=back,arrowtail=empty];
	//vue.Popup_Pousser_Alerte.JCheckBoxList.CellRenderer implements javax.swing.ListCellRenderer<E>
	c73:p -> c49:p [dir=back,arrowtail=empty,style=dashed];
	//vue.Popup_achatventeautomatique extends javax.swing.JPanel
	c71:p -> c50:p [dir=back,arrowtail=empty];
	//vue.Popup_alertes extends javax.swing.JDialog
	c61:p -> c51:p [dir=back,arrowtail=empty];
	//vue.Popup_avertissement_entreprises_interdites extends javax.swing.JDialog
	c61:p -> c52:p [dir=back,arrowtail=empty];
	//vue.Popup_rapport_pdf extends javax.swing.JDialog
	c61:p -> c53:p [dir=back,arrowtail=empty];
	//vue.Renderer_combobox_ajout implements javax.swing.ListCellRenderer<E>
	c73:p -> c54:p [dir=back,arrowtail=empty,style=dashed];
	//vue.TableMouseListener extends java.awt.event.MouseAdapter
	c74:p -> c55:p [dir=back,arrowtail=empty];
	//vue.TableRenderer extends javax.swing.table.DefaultTableCellRenderer
	c68:p -> c56:p [dir=back,arrowtail=empty];
	//vue.TableRendererBob extends javax.swing.table.DefaultTableCellRenderer
	c68:p -> c57:p [dir=back,arrowtail=empty];
	//vue.TableRenderer_activiteentreprises_bob extends javax.swing.table.DefaultTableCellRenderer
	c68:p -> c58:p [dir=back,arrowtail=empty];
	// javax.swing.JDialog
	c61 [label=<<table title="javax.swing.JDialog" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JDialog.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JDialog </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - defaultLookAndFeelDecoratedKey : Object </td></tr>
<tr><td align="left" balign="left"> - defaultCloseOperation : int </td></tr>
<tr><td align="left" balign="left"> # rootPane : JRootPane </td></tr>
<tr><td align="left" balign="left"> # rootPaneCheckingEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> - transferHandler : TransferHandler </td></tr>
<tr><td align="left" balign="left"> # accessibleContext : AccessibleContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JDialog() </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Frame) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Frame, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Frame, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Frame, arg1 : String, arg2 : boolean) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Frame, arg1 : String, arg2 : boolean, arg3 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Dialog) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Dialog, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Dialog, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Dialog, arg1 : String, arg2 : boolean) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Dialog, arg1 : String, arg2 : boolean, arg3 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Window) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Window, arg1 : Dialog.ModalityType) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Window, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Window, arg1 : String, arg2 : Dialog.ModalityType) </td></tr>
<tr><td align="left" balign="left"> + JDialog(arg0 : Window, arg1 : String, arg2 : Dialog.ModalityType, arg3 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> # dialogInit() </td></tr>
<tr><td align="left" balign="left"> # createRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # processWindowEvent(arg0 : WindowEvent) </td></tr>
<tr><td align="left" balign="left"> + setDefaultCloseOperation(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDefaultCloseOperation() : int </td></tr>
<tr><td align="left" balign="left"> + setTransferHandler(arg0 : TransferHandler) </td></tr>
<tr><td align="left" balign="left"> + getTransferHandler() : TransferHandler </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + setJMenuBar(arg0 : JMenuBar) </td></tr>
<tr><td align="left" balign="left"> + getJMenuBar() : JMenuBar </td></tr>
<tr><td align="left" balign="left"> # isRootPaneCheckingEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> # setRootPaneCheckingEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> # addImpl(arg0 : Component, arg1 : Object, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + setLayout(arg0 : LayoutManager) </td></tr>
<tr><td align="left" balign="left"> + getRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # setRootPane(arg0 : JRootPane) </td></tr>
<tr><td align="left" balign="left"> + getContentPane() : Container </td></tr>
<tr><td align="left" balign="left"> + setContentPane(arg0 : Container) </td></tr>
<tr><td align="left" balign="left"> + getLayeredPane() : JLayeredPane </td></tr>
<tr><td align="left" balign="left"> + setLayeredPane(arg0 : JLayeredPane) </td></tr>
<tr><td align="left" balign="left"> + getGlassPane() : Component </td></tr>
<tr><td align="left" balign="left"> + setGlassPane(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + getGraphics() : Graphics </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + setDefaultLookAndFeelDecorated(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDefaultLookAndFeelDecorated() : boolean </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JDialog.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.table.TableCellRenderer
	c65 [label=<<table title="javax.swing.table.TableCellRenderer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/table/TableCellRenderer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TableCellRenderer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTableCellRendererComponent(arg0 : JTable, arg1 : Object, arg2 : boolean, arg3 : boolean, arg4 : int, arg5 : int) : Component </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/table/TableCellRenderer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.awt.event.MouseAdapter
	c74 [label=<<table title="java.awt.event.MouseAdapter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/awt/event/MouseAdapter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> MouseAdapter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MouseAdapter() </td></tr>
<tr><td align="left" balign="left"> + mouseClicked(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mousePressed(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseReleased(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseEntered(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseExited(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseWheelMoved(arg0 : MouseWheelEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseDragged(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + mouseMoved(arg0 : MouseEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/awt/event/MouseAdapter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.JFrame
	c69 [label=<<table title="javax.swing.JFrame" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JFrame.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JFrame </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EXIT_ON_CLOSE : int </td></tr>
<tr><td align="left" balign="left"> - defaultLookAndFeelDecoratedKey : Object </td></tr>
<tr><td align="left" balign="left"> - defaultCloseOperation : int </td></tr>
<tr><td align="left" balign="left"> - transferHandler : TransferHandler </td></tr>
<tr><td align="left" balign="left"> # rootPane : JRootPane </td></tr>
<tr><td align="left" balign="left"> # rootPaneCheckingEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> # accessibleContext : AccessibleContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JFrame() </td></tr>
<tr><td align="left" balign="left"> + JFrame(arg0 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> + JFrame(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + JFrame(arg0 : String, arg1 : GraphicsConfiguration) </td></tr>
<tr><td align="left" balign="left"> # frameInit() </td></tr>
<tr><td align="left" balign="left"> # createRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # processWindowEvent(arg0 : WindowEvent) </td></tr>
<tr><td align="left" balign="left"> + setDefaultCloseOperation(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDefaultCloseOperation() : int </td></tr>
<tr><td align="left" balign="left"> + setTransferHandler(arg0 : TransferHandler) </td></tr>
<tr><td align="left" balign="left"> + getTransferHandler() : TransferHandler </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + setJMenuBar(arg0 : JMenuBar) </td></tr>
<tr><td align="left" balign="left"> + getJMenuBar() : JMenuBar </td></tr>
<tr><td align="left" balign="left"> # isRootPaneCheckingEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> # setRootPaneCheckingEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> # addImpl(arg0 : Component, arg1 : Object, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + setLayout(arg0 : LayoutManager) </td></tr>
<tr><td align="left" balign="left"> + getRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # setRootPane(arg0 : JRootPane) </td></tr>
<tr><td align="left" balign="left"> + setIconImage(arg0 : Image) </td></tr>
<tr><td align="left" balign="left"> + getContentPane() : Container </td></tr>
<tr><td align="left" balign="left"> + setContentPane(arg0 : Container) </td></tr>
<tr><td align="left" balign="left"> + getLayeredPane() : JLayeredPane </td></tr>
<tr><td align="left" balign="left"> + setLayeredPane(arg0 : JLayeredPane) </td></tr>
<tr><td align="left" balign="left"> + getGlassPane() : Component </td></tr>
<tr><td align="left" balign="left"> + setGlassPane(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + getGraphics() : Graphics </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + setDefaultLookAndFeelDecorated(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDefaultLookAndFeelDecorated() : boolean </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JFrame.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.table.DefaultTableCellRenderer
	c68 [label=<<table title="javax.swing.table.DefaultTableCellRenderer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/table/DefaultTableCellRenderer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultTableCellRenderer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SAFE_NO_FOCUS_BORDER : Border </td></tr>
<tr><td align="left" balign="left"> - DEFAULT_NO_FOCUS_BORDER : Border </td></tr>
<tr><td align="left" balign="left"> # noFocusBorder : Border </td></tr>
<tr><td align="left" balign="left"> - unselectedForeground : Color </td></tr>
<tr><td align="left" balign="left"> - unselectedBackground : Color </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultTableCellRenderer() </td></tr>
<tr><td align="left" balign="left"> - getNoFocusBorder() : Border </td></tr>
<tr><td align="left" balign="left"> + setForeground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + setBackground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + updateUI() </td></tr>
<tr><td align="left" balign="left"> + getTableCellRendererComponent(arg0 : JTable, arg1 : Object, arg2 : boolean, arg3 : boolean, arg4 : int, arg5 : int) : Component </td></tr>
<tr><td align="left" balign="left"> + isOpaque() : boolean </td></tr>
<tr><td align="left" balign="left"> + invalidate() </td></tr>
<tr><td align="left" balign="left"> + validate() </td></tr>
<tr><td align="left" balign="left"> + revalidate() </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : Rectangle) </td></tr>
<tr><td align="left" balign="left"> + repaint() </td></tr>
<tr><td align="left" balign="left"> # firePropertyChange(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : boolean, arg2 : boolean) </td></tr>
<tr><td align="left" balign="left"> # setValue(arg0 : Object) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/table/DefaultTableCellRenderer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.AbstractAction
	c62 [label=<<table title="javax.swing.AbstractAction" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/AbstractAction.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractAction </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - RECONFIGURE_ON_NULL : Boolean </td></tr>
<tr><td align="left" balign="left"> # enabled : boolean </td></tr>
<tr><td align="left" balign="left"> - arrayTable : ArrayTable </td></tr>
<tr><td align="left" balign="left"> # changeSupport : SwingPropertyChangeSupport </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractAction() </td></tr>
<tr><td align="left" balign="left"> + AbstractAction(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + AbstractAction(arg0 : String, arg1 : Icon) </td></tr>
<tr><td align="left" balign="left"> ~ shouldReconfigure(arg0 : PropertyChangeEvent) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ setEnabledFromAction(arg0 : JComponent, arg1 : Action) </td></tr>
<tr><td align="left" balign="left"> ~ setToolTipTextFromAction(arg0 : JComponent, arg1 : Action) </td></tr>
<tr><td align="left" balign="left"> ~ hasSelectedKey(arg0 : Action) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ isSelected(arg0 : Action) : boolean </td></tr>
<tr><td align="left" balign="left"> + getValue(arg0 : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + isEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + setEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getKeys() : Object[] </td></tr>
<tr><td align="left" balign="left"> # firePropertyChange(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + addPropertyChangeListener(arg0 : PropertyChangeListener) </td></tr>
<tr><td align="left" balign="left"> + removePropertyChangeListener(arg0 : PropertyChangeListener) </td></tr>
<tr><td align="left" balign="left"> + getPropertyChangeListeners() : PropertyChangeListener[] </td></tr>
<tr><td align="left" balign="left"> # clone() : Object </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/AbstractAction.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.JPanel
	c71 [label=<<table title="javax.swing.JPanel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JPanel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JPanel </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - uiClassID : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JPanel(arg0 : LayoutManager, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + JPanel(arg0 : LayoutManager) </td></tr>
<tr><td align="left" balign="left"> + JPanel(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + JPanel() </td></tr>
<tr><td align="left" balign="left"> + updateUI() </td></tr>
<tr><td align="left" balign="left"> + getUI() : PanelUI </td></tr>
<tr><td align="left" balign="left"> + setUI(arg0 : PanelUI) </td></tr>
<tr><td align="left" balign="left"> + getUIClassID() : String </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JPanel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.awt.event.ActionListener
	c67 [label=<<table title="java.awt.event.ActionListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/awt/event/ActionListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ActionListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + actionPerformed(arg0 : ActionEvent) </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/awt/event/ActionListener.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.JApplet
	c59 [label=<<table title="javax.swing.JApplet" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JApplet.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JApplet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # rootPane : JRootPane </td></tr>
<tr><td align="left" balign="left"> # rootPaneCheckingEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> - transferHandler : TransferHandler </td></tr>
<tr><td align="left" balign="left"> # accessibleContext : AccessibleContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JApplet() </td></tr>
<tr><td align="left" balign="left"> # createRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> + setTransferHandler(arg0 : TransferHandler) </td></tr>
<tr><td align="left" balign="left"> + getTransferHandler() : TransferHandler </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + setJMenuBar(arg0 : JMenuBar) </td></tr>
<tr><td align="left" balign="left"> + getJMenuBar() : JMenuBar </td></tr>
<tr><td align="left" balign="left"> # isRootPaneCheckingEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> # setRootPaneCheckingEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> # addImpl(arg0 : Component, arg1 : Object, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + setLayout(arg0 : LayoutManager) </td></tr>
<tr><td align="left" balign="left"> + getRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # setRootPane(arg0 : JRootPane) </td></tr>
<tr><td align="left" balign="left"> + getContentPane() : Container </td></tr>
<tr><td align="left" balign="left"> + setContentPane(arg0 : Container) </td></tr>
<tr><td align="left" balign="left"> + getLayeredPane() : JLayeredPane </td></tr>
<tr><td align="left" balign="left"> + setLayeredPane(arg0 : JLayeredPane) </td></tr>
<tr><td align="left" balign="left"> + getGlassPane() : Component </td></tr>
<tr><td align="left" balign="left"> + setGlassPane(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + getGraphics() : Graphics </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JApplet.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.table.AbstractTableModel
	c63 [label=<<table title="javax.swing.table.AbstractTableModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/table/AbstractTableModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractTableModel </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # listenerList : EventListenerList </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractTableModel() </td></tr>
<tr><td align="left" balign="left"> + getColumnName(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + findColumn(arg0 : String) : int </td></tr>
<tr><td align="left" balign="left"> + getColumnClass(arg0 : int) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + isCellEditable(arg0 : int, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + setValueAt(arg0 : Object, arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + addTableModelListener(arg0 : TableModelListener) </td></tr>
<tr><td align="left" balign="left"> + removeTableModelListener(arg0 : TableModelListener) </td></tr>
<tr><td align="left" balign="left"> + getTableModelListeners() : TableModelListener[] </td></tr>
<tr><td align="left" balign="left"> + fireTableDataChanged() </td></tr>
<tr><td align="left" balign="left"> + fireTableStructureChanged() </td></tr>
<tr><td align="left" balign="left"> + fireTableRowsInserted(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + fireTableRowsUpdated(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + fireTableRowsDeleted(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + fireTableCellUpdated(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + fireTableChanged(arg0 : TableModelEvent) </td></tr>
<tr><td align="left" balign="left"> + getListeners(arg0 : Class&lt;T&gt;) : T[] </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/table/AbstractTableModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.JButton
	c64 [label=<<table title="javax.swing.JButton" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JButton.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JButton </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - uiClassID : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JButton() </td></tr>
<tr><td align="left" balign="left"> + JButton(arg0 : Icon) </td></tr>
<tr><td align="left" balign="left"> + JButton(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + JButton(arg0 : Action) </td></tr>
<tr><td align="left" balign="left"> + JButton(arg0 : String, arg1 : Icon) </td></tr>
<tr><td align="left" balign="left"> + updateUI() </td></tr>
<tr><td align="left" balign="left"> + getUIClassID() : String </td></tr>
<tr><td align="left" balign="left"> + isDefaultButton() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDefaultCapable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setDefaultCapable(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + removeNotify() </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JButton.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.JPopupMenu
	c70 [label=<<table title="javax.swing.JPopupMenu" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JPopupMenu.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JPopupMenu </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - uiClassID : String </td></tr>
<tr><td align="left" balign="left"> - defaultLWPopupEnabledKey : Object </td></tr>
<tr><td align="left" balign="left"> ~ popupPostionFixDisabled : boolean </td></tr>
<tr><td align="left" balign="left"> ~ invoker : Component </td></tr>
<tr><td align="left" balign="left"> ~ popup : Popup </td></tr>
<tr><td align="left" balign="left"> ~ frame : Frame </td></tr>
<tr><td align="left" balign="left"> - desiredLocationX : int </td></tr>
<tr><td align="left" balign="left"> - desiredLocationY : int </td></tr>
<tr><td align="left" balign="left"> - label : String </td></tr>
<tr><td align="left" balign="left"> - paintBorder : boolean </td></tr>
<tr><td align="left" balign="left"> - margin : Insets </td></tr>
<tr><td align="left" balign="left"> - lightWeightPopup : boolean </td></tr>
<tr><td align="left" balign="left"> - selectionModel : SingleSelectionModel </td></tr>
<tr><td align="left" balign="left"> - classLock : Object </td></tr>
<tr><td align="left" balign="left"> - TRACE : boolean </td></tr>
<tr><td align="left" balign="left"> - VERBOSE : boolean </td></tr>
<tr><td align="left" balign="left"> - DEBUG : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JPopupMenu() </td></tr>
<tr><td align="left" balign="left"> + JPopupMenu(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + setDefaultLightWeightPopupEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getDefaultLightWeightPopupEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getUI() : PopupMenuUI </td></tr>
<tr><td align="left" balign="left"> + setUI(arg0 : PopupMenuUI) </td></tr>
<tr><td align="left" balign="left"> + updateUI() </td></tr>
<tr><td align="left" balign="left"> + getUIClassID() : String </td></tr>
<tr><td align="left" balign="left"> # processFocusEvent(arg0 : FocusEvent) </td></tr>
<tr><td align="left" balign="left"> # processKeyEvent(arg0 : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> + getSelectionModel() : SingleSelectionModel </td></tr>
<tr><td align="left" balign="left"> + setSelectionModel(arg0 : SingleSelectionModel) </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : JMenuItem) : JMenuItem </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : String) : JMenuItem </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : Action) : JMenuItem </td></tr>
<tr><td align="left" balign="left"> ~ adjustPopupLocationToFitScreen(arg0 : int, arg1 : int) : Point </td></tr>
<tr><td align="left" balign="left"> - getCurrentGraphicsConfiguration(arg0 : Point) : GraphicsConfiguration </td></tr>
<tr><td align="left" balign="left"> ~ canPopupOverlapTaskBar() : boolean </td></tr>
<tr><td align="left" balign="left"> # createActionComponent(arg0 : Action) : JMenuItem </td></tr>
<tr><td align="left" balign="left"> # createActionChangeListener(arg0 : JMenuItem) : PropertyChangeListener </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + setLightWeightPopupEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isLightWeightPopupEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getLabel() : String </td></tr>
<tr><td align="left" balign="left"> + setLabel(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + addSeparator() </td></tr>
<tr><td align="left" balign="left"> + insert(arg0 : Action, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + insert(arg0 : Component, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + addPopupMenuListener(arg0 : PopupMenuListener) </td></tr>
<tr><td align="left" balign="left"> + removePopupMenuListener(arg0 : PopupMenuListener) </td></tr>
<tr><td align="left" balign="left"> + getPopupMenuListeners() : PopupMenuListener[] </td></tr>
<tr><td align="left" balign="left"> + addMenuKeyListener(arg0 : MenuKeyListener) </td></tr>
<tr><td align="left" balign="left"> + removeMenuKeyListener(arg0 : MenuKeyListener) </td></tr>
<tr><td align="left" balign="left"> + getMenuKeyListeners() : MenuKeyListener[] </td></tr>
<tr><td align="left" balign="left"> # firePopupMenuWillBecomeVisible() </td></tr>
<tr><td align="left" balign="left"> # firePopupMenuWillBecomeInvisible() </td></tr>
<tr><td align="left" balign="left"> # firePopupMenuCanceled() </td></tr>
<tr><td align="left" balign="left"> ~ alwaysOnTop() : boolean </td></tr>
<tr><td align="left" balign="left"> + pack() </td></tr>
<tr><td align="left" balign="left"> + setVisible(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> - showPopup() </td></tr>
<tr><td align="left" balign="left"> + isVisible() : boolean </td></tr>
<tr><td align="left" balign="left"> + setLocation(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - isPopupMenu() : boolean </td></tr>
<tr><td align="left" balign="left"> + getInvoker() : Component </td></tr>
<tr><td align="left" balign="left"> + setInvoker(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + show(arg0 : Component, arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> ~ getRootPopupMenu() : JPopupMenu </td></tr>
<tr><td align="left" balign="left"> + getComponentAtIndex(arg0 : int) : Component </td></tr>
<tr><td align="left" balign="left"> + getComponentIndex(arg0 : Component) : int </td></tr>
<tr><td align="left" balign="left"> + setPopupSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + setPopupSize(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + setSelected(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + isBorderPainted() : boolean </td></tr>
<tr><td align="left" balign="left"> + setBorderPainted(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> # paintBorder(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + getMargin() : Insets </td></tr>
<tr><td align="left" balign="left"> ~ isSubPopupMenu(arg0 : JPopupMenu) : boolean </td></tr>
<tr><td align="left" balign="left"> - getFrame(arg0 : Component) : Frame </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> + processMouseEvent(arg0 : MouseEvent, arg1 : MenuElement[], arg2 : MenuSelectionManager) </td></tr>
<tr><td align="left" balign="left"> + processKeyEvent(arg0 : KeyEvent, arg1 : MenuElement[], arg2 : MenuSelectionManager) </td></tr>
<tr><td align="left" balign="left"> - processMenuKeyEvent(arg0 : MenuKeyEvent) </td></tr>
<tr><td align="left" balign="left"> - fireMenuKeyPressed(arg0 : MenuKeyEvent) </td></tr>
<tr><td align="left" balign="left"> - fireMenuKeyReleased(arg0 : MenuKeyEvent) </td></tr>
<tr><td align="left" balign="left"> - fireMenuKeyTyped(arg0 : MenuKeyEvent) </td></tr>
<tr><td align="left" balign="left"> + menuSelectionChanged(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getSubElements() : MenuElement[] </td></tr>
<tr><td align="left" balign="left"> + getComponent() : Component </td></tr>
<tr><td align="left" balign="left"> + isPopupTrigger(arg0 : MouseEvent) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JPopupMenu.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.JList<E>
	c72 [label=<<table title="javax.swing.JList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JList&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - uiClassID : String </td></tr>
<tr><td align="left" balign="left"> + VERTICAL : int </td></tr>
<tr><td align="left" balign="left"> + VERTICAL_WRAP : int </td></tr>
<tr><td align="left" balign="left"> + HORIZONTAL_WRAP : int </td></tr>
<tr><td align="left" balign="left"> - fixedCellWidth : int </td></tr>
<tr><td align="left" balign="left"> - fixedCellHeight : int </td></tr>
<tr><td align="left" balign="left"> - horizontalScrollIncrement : int </td></tr>
<tr><td align="left" balign="left"> - prototypeCellValue : E </td></tr>
<tr><td align="left" balign="left"> - visibleRowCount : int </td></tr>
<tr><td align="left" balign="left"> - selectionForeground : Color </td></tr>
<tr><td align="left" balign="left"> - selectionBackground : Color </td></tr>
<tr><td align="left" balign="left"> - dragEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> - selectionModel : ListSelectionModel </td></tr>
<tr><td align="left" balign="left"> - dataModel : ListModel&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> - cellRenderer : ListCellRenderer&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> - selectionListener : ListSelectionListener </td></tr>
<tr><td align="left" balign="left"> - layoutOrientation : int </td></tr>
<tr><td align="left" balign="left"> - dropMode : DropMode </td></tr>
<tr><td align="left" balign="left"> - dropLocation : JList.DropLocation </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JList(arg0 : ListModel&lt;E&gt;) </td></tr>
<tr><td align="left" balign="left"> + JList(arg0 : E[]) </td></tr>
<tr><td align="left" balign="left"> + JList(arg0 : Vector&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + JList() </td></tr>
<tr><td align="left" balign="left"> + getUI() : ListUI </td></tr>
<tr><td align="left" balign="left"> + setUI(arg0 : ListUI) </td></tr>
<tr><td align="left" balign="left"> + updateUI() </td></tr>
<tr><td align="left" balign="left"> + getUIClassID() : String </td></tr>
<tr><td align="left" balign="left"> - updateFixedCellSize() </td></tr>
<tr><td align="left" balign="left"> + getPrototypeCellValue() : E </td></tr>
<tr><td align="left" balign="left"> + setPrototypeCellValue(arg0 : E) </td></tr>
<tr><td align="left" balign="left"> + getFixedCellWidth() : int </td></tr>
<tr><td align="left" balign="left"> + setFixedCellWidth(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getFixedCellHeight() : int </td></tr>
<tr><td align="left" balign="left"> + setFixedCellHeight(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getCellRenderer() : ListCellRenderer&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + setCellRenderer(arg0 : ListCellRenderer&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getSelectionForeground() : Color </td></tr>
<tr><td align="left" balign="left"> + setSelectionForeground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + getSelectionBackground() : Color </td></tr>
<tr><td align="left" balign="left"> + setSelectionBackground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + getVisibleRowCount() : int </td></tr>
<tr><td align="left" balign="left"> + setVisibleRowCount(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getLayoutOrientation() : int </td></tr>
<tr><td align="left" balign="left"> + setLayoutOrientation(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getFirstVisibleIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getLastVisibleIndex() : int </td></tr>
<tr><td align="left" balign="left"> + ensureIndexIsVisible(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + setDragEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getDragEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + setDropMode(arg0 : DropMode) </td></tr>
<tr><td align="left" balign="left"> + getDropMode() : DropMode </td></tr>
<tr><td align="left" balign="left"> ~ dropLocationForPoint(arg0 : Point) : JList.DropLocation </td></tr>
<tr><td align="left" balign="left"> ~ setDropLocation(arg0 : TransferHandler.DropLocation, arg1 : Object, arg2 : boolean) : Object </td></tr>
<tr><td align="left" balign="left"> + getDropLocation() : JList.DropLocation </td></tr>
<tr><td align="left" balign="left"> + getNextMatch(arg0 : String, arg1 : int, arg2 : Position.Bias) : int </td></tr>
<tr><td align="left" balign="left"> + getToolTipText(arg0 : MouseEvent) : String </td></tr>
<tr><td align="left" balign="left"> + locationToIndex(arg0 : Point) : int </td></tr>
<tr><td align="left" balign="left"> + indexToLocation(arg0 : int) : Point </td></tr>
<tr><td align="left" balign="left"> + getCellBounds(arg0 : int, arg1 : int) : Rectangle </td></tr>
<tr><td align="left" balign="left"> + getModel() : ListModel&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + setModel(arg0 : ListModel&lt;E&gt;) </td></tr>
<tr><td align="left" balign="left"> + setListData(arg0 : E[]) </td></tr>
<tr><td align="left" balign="left"> + setListData(arg0 : Vector&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> # createSelectionModel() : ListSelectionModel </td></tr>
<tr><td align="left" balign="left"> + getSelectionModel() : ListSelectionModel </td></tr>
<tr><td align="left" balign="left"> # fireSelectionValueChanged(arg0 : int, arg1 : int, arg2 : boolean) </td></tr>
<tr><td align="left" balign="left"> + addListSelectionListener(arg0 : ListSelectionListener) </td></tr>
<tr><td align="left" balign="left"> + removeListSelectionListener(arg0 : ListSelectionListener) </td></tr>
<tr><td align="left" balign="left"> + getListSelectionListeners() : ListSelectionListener[] </td></tr>
<tr><td align="left" balign="left"> + setSelectionModel(arg0 : ListSelectionModel) </td></tr>
<tr><td align="left" balign="left"> + setSelectionMode(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getSelectionMode() : int </td></tr>
<tr><td align="left" balign="left"> + getAnchorSelectionIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getLeadSelectionIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getMinSelectionIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getMaxSelectionIndex() : int </td></tr>
<tr><td align="left" balign="left"> + isSelectedIndex(arg0 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + isSelectionEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + clearSelection() </td></tr>
<tr><td align="left" balign="left"> + setSelectionInterval(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + addSelectionInterval(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + removeSelectionInterval(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + setValueIsAdjusting(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getValueIsAdjusting() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSelectedIndices() : int[] </td></tr>
<tr><td align="left" balign="left"> + setSelectedIndex(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + setSelectedIndices(arg0 : int[]) </td></tr>
<tr><td align="left" balign="left"> + getSelectedValues() : Object[] </td></tr>
<tr><td align="left" balign="left"> + getSelectedValuesList() : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + getSelectedIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getSelectedValue() : E </td></tr>
<tr><td align="left" balign="left"> + setSelectedValue(arg0 : Object, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> - checkScrollableParameters(arg0 : Rectangle, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + getPreferredScrollableViewportSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + getScrollableUnitIncrement(arg0 : Rectangle, arg1 : int, arg2 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getScrollableBlockIncrement(arg0 : Rectangle, arg1 : int, arg2 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getScrollableTracksViewportWidth() : boolean </td></tr>
<tr><td align="left" balign="left"> + getScrollableTracksViewportHeight() : boolean </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/JList.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.DefaultCellEditor
	c66 [label=<<table title="javax.swing.DefaultCellEditor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/DefaultCellEditor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DefaultCellEditor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # editorComponent : JComponent </td></tr>
<tr><td align="left" balign="left"> # delegate : DefaultCellEditor.EditorDelegate </td></tr>
<tr><td align="left" balign="left"> # clickCountToStart : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DefaultCellEditor(arg0 : JTextField) </td></tr>
<tr><td align="left" balign="left"> + DefaultCellEditor(arg0 : JCheckBox) </td></tr>
<tr><td align="left" balign="left"> + DefaultCellEditor(arg0 : JComboBox&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getComponent() : Component </td></tr>
<tr><td align="left" balign="left"> + setClickCountToStart(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getClickCountToStart() : int </td></tr>
<tr><td align="left" balign="left"> + getCellEditorValue() : Object </td></tr>
<tr><td align="left" balign="left"> + isCellEditable(arg0 : EventObject) : boolean </td></tr>
<tr><td align="left" balign="left"> + shouldSelectCell(arg0 : EventObject) : boolean </td></tr>
<tr><td align="left" balign="left"> + stopCellEditing() : boolean </td></tr>
<tr><td align="left" balign="left"> + cancelCellEditing() </td></tr>
<tr><td align="left" balign="left"> + getTreeCellEditorComponent(arg0 : JTree, arg1 : Object, arg2 : boolean, arg3 : boolean, arg4 : boolean, arg5 : int) : Component </td></tr>
<tr><td align="left" balign="left"> + getTableCellEditorComponent(arg0 : JTable, arg1 : Object, arg2 : boolean, arg3 : int, arg4 : int) : Component </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/DefaultCellEditor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// javax.swing.ListCellRenderer<E>
	c73 [label=<<table title="javax.swing.ListCellRenderer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/ListCellRenderer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ListCellRenderer&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getListCellRendererComponent(arg0 : JList&lt;?&gt;, arg1 : E, arg2 : int, arg3 : boolean, arg4 : boolean) : Component </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/javax/swing/ListCellRenderer.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ApplicationFrame
	c60[label=<<table title="ApplicationFrame" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api//ApplicationFrame.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ApplicationFrame </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

